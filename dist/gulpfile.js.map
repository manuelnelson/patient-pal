{"version":3,"sources":["../src/server/gulpfile.js"],"names":["plugins","paths","js","nonJs","tests","task","sync","src","pipe","newer","dest","base","sourcemaps","init","babel","write","includeContent","sourceRoot","file","relative","path","__dirname","nodemon","script","join","ext","ignore","tasks"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA,UAAU,gCAAhB;;AAEA,IAAMC,QAAQ;AACZC,MAAI,CAAC,WAAD,EAAc,UAAd,EAA0B,kBAA1B,EAA8C,cAA9C,CADQ;AAEZC,SAAO,CAAC,gBAAD,EAAmB,cAAnB,EAAmC,QAAnC,CAFK;AAGZC,SAAO;AAHK,CAAd;;AAMA;AACA,eAAKC,IAAL,CAAU,OAAV,EAAmB;AAAA,SACjB,cAAIC,IAAJ,CAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,aAAvB,EAAsC,OAAtC,EAA+C,WAA/C,CAAT,CADiB;AAAA,CAAnB;;AAIA;AACA,eAAKD,IAAL,CAAU,MAAV,EAAkB;AAAA,SAChB,eAAKE,GAAL,CAASN,MAAME,KAAf,EACGK,IADH,CACQR,QAAQS,KAAR,CAAc,MAAd,CADR,EAEGD,IAFH,CAEQ,eAAKE,IAAL,CAAU,MAAV,CAFR,CADgB;AAAA,CAAlB;;AAMA;AACA,eAAKL,IAAL,CAAU,OAAV,EAAmB;AAAA,SACjB,eAAKE,GAAL,8BAAaN,MAAMC,EAAnB,IAAuB,oBAAvB,IAA8C,EAAES,MAAM,GAAR,EAA9C,EACGH,IADH,CACQR,QAAQS,KAAR,CAAc,MAAd,CADR,EAEGD,IAFH,CAEQR,QAAQY,UAAR,CAAmBC,IAAnB,EAFR,EAGGL,IAHH,CAGQR,QAAQc,KAAR,EAHR,EAIGN,IAJH,CAIQR,QAAQY,UAAR,CAAmBG,KAAnB,CAAyB,GAAzB,EAA8B;AAClCC,oBAAgB,KADkB;AAElCC,cAFkC,sBAEvBC,IAFuB,EAEjB;AACf,aAAO,eAAKC,QAAL,CAAcD,KAAKE,IAAnB,EAAyBC,SAAzB,CAAP;AACD;AAJiC,GAA9B,CAJR,EAUGb,IAVH,CAUQ,eAAKE,IAAL,CAAU,MAAV,CAVR,CADiB;AAAA,CAAnB;;AAcA;AACA,eAAKL,IAAL,CAAU,SAAV,EAAqB,CAAC,MAAD,EAAS,OAAT,CAArB,EAAwC;AAAA,SACtCL,QAAQsB,OAAR,CAAgB;AACdC,YAAQ,eAAKC,IAAL,CAAU,MAAV,EAAkB,UAAlB,CADM;AAEdC,SAAK,IAFS;AAGdC,YAAQ,CAAC,sBAAD,EAAyB,cAAzB,CAHM;AAIdC,WAAO,CAAC,MAAD,EAAS,OAAT;AAJO,GAAhB,CADsC;AAAA,CAAxC;;AASA;AACA,eAAKtB,IAAL,CAAU,OAAV,EAAmB,CAAC,OAAD,CAAnB,EAA8B;AAAA,SAAM,2BAAY,SAAZ,CAAN;AAAA,CAA9B;;AAEA;AACA,eAAKA,IAAL,CAAU,SAAV,EAAqB,CAAC,OAAD,CAArB,EAAgC,YAAM;AACpC,6BACE,CAAC,MAAD,EAAS,OAAT,CADF;AAGD,CAJD","file":"gulpfile.js","sourcesContent":["import gulp from 'gulp';\r\nimport gulpLoadPlugins from 'gulp-load-plugins';\r\nimport path from 'path';\r\nimport del from 'del';\r\nimport runSequence from 'run-sequence';\r\n\r\nconst plugins = gulpLoadPlugins();\r\n\r\nconst paths = {\r\n  js: ['./**/*.js', '!dist/**', '!node_modules/**', '!coverage/**'],\r\n  nonJs: ['./package.json', './.gitignore', './.env'],\r\n  tests: './server/tests/*.js'\r\n};\r\n\r\n// Clean up dist and coverage directory\r\ngulp.task('clean', () =>\r\n  del.sync(['dist/**', 'dist/.*', 'coverage/**', '!dist', '!coverage'])\r\n);\r\n\r\n// Copy non-js files to dist\r\ngulp.task('copy', () =>\r\n  gulp.src(paths.nonJs)\r\n    .pipe(plugins.newer('dist'))\r\n    .pipe(gulp.dest('dist'))\r\n);\r\n\r\n// Compile ES6 to ES5 and copy to dist\r\ngulp.task('babel', () =>\r\n  gulp.src([...paths.js, '!gulpfile.babel.js'], { base: '.' })\r\n    .pipe(plugins.newer('dist'))\r\n    .pipe(plugins.sourcemaps.init())\r\n    .pipe(plugins.babel())\r\n    .pipe(plugins.sourcemaps.write('.', {\r\n      includeContent: false,\r\n      sourceRoot(file) {\r\n        return path.relative(file.path, __dirname);\r\n      }\r\n    }))\r\n    .pipe(gulp.dest('dist'))\r\n);\r\n\r\n// Start server with restart on file changes\r\ngulp.task('nodemon', ['copy', 'babel'], () =>\r\n  plugins.nodemon({\r\n    script: path.join('dist', 'index.js'),\r\n    ext: 'js',\r\n    ignore: ['node_modules/**/*.js', 'dist/**/*.js'],\r\n    tasks: ['copy', 'babel']\r\n  })\r\n);\r\n\r\n// gulp serve for development\r\ngulp.task('serve', ['clean'], () => runSequence('nodemon'));\r\n\r\n// default task: clean dist, compile js files and copy non-js files.\r\ngulp.task('default', ['clean'], () => {\r\n  runSequence(\r\n    ['copy', 'babel']\r\n  );\r\n});\r\n"]}