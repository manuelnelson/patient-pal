{"version":3,"sources":["../../src/server/controllers/email-controller.js"],"names":["emailPath","join","__dirname","email","process","env","MAILER_EMAIL_ID","pass","MAILER_PASSWORD","handlebarOptions","viewEngine","viewPath","extName","smtpTransport","createTransport","service","MAILER_SERVICE_PROVIDER","auth","user","use","sendEmail","to","template","subject","context","Promise","resolve","reject","data","from","sendMail","err"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAGA,IAAIA,YAAY,eAAKC,IAAL,CAAUC,SAAV,EAAqB,iBAArB,CAAhB;AACA,IAAIC,QAAQC,QAAQC,GAAR,CAAYC,eAAZ,IAA+B,4BAA3C;AAAA,IACIC,OAAOH,QAAQC,GAAR,CAAYG,eAAZ,IAA+B,SAD1C;AAEA,IAAIC,mBAAmB;AACnBC,gBAAY,YADO;AAEnBC,cAAUX,SAFS;AAGnBY,aAAS;AAHU,CAAvB;AAKA,IAAIC,gBAAgB,qBAAWC,eAAX,CAA2B;AAC3CC,aAASX,QAAQC,GAAR,CAAYW,uBAAZ,IAAuC,OADL;AAE3CC,UAAM;AACJC,cAAMf,KADF;AAEJI,cAAMA;AAFF;AAFqC,CAA3B,CAApB;AAOAM,cAAcM,GAAd,CAAkB,SAAlB,EAA6B,2CAAIV,gBAAJ,CAA7B;AACA;;;;;;;AAOA,SAASW,SAAT,CAAmBC,EAAnB,EAAuBC,QAAvB,EAAiCC,OAAjC,EAA0CC,OAA1C,EAAmD;AAC/C,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAIC,OAAO;AACPP,gBAAIA,EADG;AAEPQ,kBAAM1B,KAFC;AAGPmB,sBAAUA,QAHH;AAIPC,qBAASA,OAJF;AAKPC,qBAASA;AALF,SAAX;AAOA,eAAOX,cAAciB,QAAd,CAAuBF,IAAvB,EAA6B,UAACG,GAAD,EAAS;AACzC,gBAAGA,GAAH,EACI,OAAOJ,OAAOI,GAAP,CAAP;AACJ,mBAAOL,QAAQ,wBAAR,CAAP;AACH,SAJM,CAAP;AAKH,KAbM,CAAP;AAcH;kBACc,EAAEN,oBAAF,E","file":"email-controller.js","sourcesContent":["import httpStatus from 'http-status';\r\nimport { User } from '../models';\r\nimport APIError from '../lib/APIError';\r\nimport config from '../config';\r\nimport hbs from 'nodemailer-express-handlebars';\r\nimport nodemailer from 'nodemailer';\r\nimport path from 'path';\r\n\r\n\r\nlet emailPath = path.join(__dirname, '../views/emails');\r\nlet email = process.env.MAILER_EMAIL_ID || 'info.practicepal@gmail.com',\r\n    pass = process.env.MAILER_PASSWORD || '*******'\r\nlet handlebarOptions = {\r\n    viewEngine: 'handlebars',\r\n    viewPath: emailPath,\r\n    extName: '.hbs'\r\n};\r\nlet smtpTransport = nodemailer.createTransport({\r\n    service: process.env.MAILER_SERVICE_PROVIDER || 'Gmail',\r\n    auth: {\r\n      user: email,\r\n      pass: pass\r\n    }\r\n});\r\nsmtpTransport.use('compile', hbs(handlebarOptions));\r\n/**\r\n* Returns jwt token if valid username and password is provided\r\n* @param req\r\n* @param res\r\n* @param next\r\n* @returns {*} \r\n*/\r\nfunction sendEmail(to, template, subject, context) {\r\n    return new Promise((resolve, reject) => {\r\n        let data = {\r\n            to: to,\r\n            from: email,\r\n            template: template,\r\n            subject: subject,\r\n            context: context\r\n          };\r\n        return smtpTransport.sendMail(data, (err) => {\r\n            if(err)\r\n                return reject(err);\r\n            return resolve('Email sent sucessfully');\r\n        });    \r\n    })\r\n}\r\nexport default { sendEmail };\r\n"]}