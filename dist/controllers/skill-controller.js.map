{"version":3,"sources":["../../src/server/controllers/skill-controller.js"],"names":["load","req","res","next","id","get","then","skill","catch","e","json","search","regex","RegExp","params","keyword","find","targetName","$regex","skills","create","body","save","savedSkill","update","prop","list","query","limit","skip","remove","deletedSkill"],"mappings":"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","file":"skill-controller.js","sourcesContent":["import {Skill} from '../models';\r\nimport APIError from '../lib/APIError';\r\nimport httpStatus from 'http-status';\r\nimport Constants from '../lib/constants';\r\n/**\r\n* Load skill and append to req.\r\n*/\r\nfunction load(req, res, next, id) {\r\n    Skill.get(id)\r\n    .then((skill) => {\r\n        req.skill = skill;\r\n        return next();\r\n    })\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get skill\r\n* @returns {Skill}\r\n*/\r\nfunction get(req, res) {\r\n    return res.json(req.skill);\r\n}\r\n\r\n/**\r\n* Get skill\r\n* @returns {Skill}\r\n* https://medium.com/@apurvashastry/build-a-cool-database-search-using-these-mongodb-full-text-search-features-on-mongoose-cf2803257f9\r\n*/\r\nfunction search(req, res, next) {\r\n    var regex = new RegExp(req.params.keyword,'ig')\r\n    Skill.find({\r\n        targetName: {\r\n            $regex: regex\r\n        }\r\n    })\r\n    .then((skills) => res.json(skills))\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Checks if user exists with same email as skill.  If not, it creates a new User with the email provided and a default password. Then creates the Skill to reside in the new user\r\n* @returns {Skill}\r\n*/\r\nfunction create(req, res, next) {\r\n    const skill = new Skill(req.body)\r\n        .save()\r\n        .then(savedSkill => res.json(savedSkill))\r\n        .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Update existing skill\r\n* @returns {Skill}\r\n*/\r\nfunction update(req, res, next) {\r\n    const skill = req.skill;\r\n    for(let prop in req.skill){\r\n        skill[prop] = req.skill[prop];\r\n    }\r\n    skill.save()\r\n    .then(savedSkill => res.json(savedSkill))\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get skill list.\r\n* @property {number} req.query.skip - Number of skills to be skipped.\r\n* @property {number} req.query.limit - Limit number of skills to be returned.\r\n* @returns {Skill[]}\r\n*/\r\nfunction list(req, res, next) {\r\n    const { limit = 20, skip = 0 } = req.query;\r\n    Skill.list({ limit, skip })\r\n    .then(skills => res.json(skills))\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Delete skill.\r\n* @returns {Skill}\r\n*/\r\nfunction remove(req, res, next) {\r\n    const skill = req.skill;\r\n    skill.remove()\r\n    .then(deletedSkill => res.json(deletedSkill))\r\n    .catch(e => next(e));\r\n}\r\n\r\nexport default { load, get, create, update, list, remove, search };\r\n"]}