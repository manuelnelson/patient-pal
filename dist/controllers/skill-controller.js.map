{"version":3,"sources":["../../src/server/controllers/skill-controller.js"],"names":["load","req","res","next","id","get","then","skill","catch","e","json","search","regex","RegExp","params","keyword","find","targetName","$regex","organization","query","skills","create","body","save","savedSkill","update","prop","list","limit","skip","queryObj","buildQuery","length","$or","sort","createdAt","Object","keys","array","key","obj","push","remove","deletedSkill"],"mappings":"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","file":"skill-controller.js","sourcesContent":["import {Skill} from '../models';\r\nimport APIError from '../lib/APIError';\r\nimport httpStatus from 'http-status';\r\nimport Constants from '../lib/constants';\r\n/**\r\n* Load skill and append to req.\r\n*/\r\nfunction load(req, res, next, id) {\r\n    Skill.get(id)\r\n    .then((skill) => {\r\n        req.skill = skill;\r\n        return next();\r\n    })\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get skill\r\n* @returns {Skill}\r\n*/\r\nfunction get(req, res) {\r\n    return res.json(req.skill);\r\n}\r\n\r\n/**\r\n* Get skill\r\n* @returns {Skill}\r\n* https://medium.com/@apurvashastry/build-a-cool-database-search-using-these-mongodb-full-text-search-features-on-mongoose-cf2803257f9\r\n*/\r\nfunction search(req, res, next) {\r\n    var regex = new RegExp(req.params.keyword,'ig')\r\n    Skill.find({\r\n        targetName: {\r\n            $regex: regex\r\n        },\r\n        organization: req.query.organization\r\n    })\r\n    .then((skills) => res.json(skills))\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Checks if user exists with same email as skill.  If not, it creates a new User with the email provided and a default password. Then creates the Skill to reside in the new user\r\n* @returns {Skill}\r\n*/\r\nfunction create(req, res, next) {\r\n    const skill = new Skill(req.body)\r\n        .save()\r\n        .then(savedSkill => res.json(savedSkill))\r\n        .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Update existing skill\r\n* @returns {Skill}\r\n*/\r\nfunction update(req, res, next) {\r\n    const skill = req.skill;\r\n    for(let prop in req.skill){\r\n        skill[prop] = req.skill[prop];\r\n    }\r\n    skill.save()\r\n    .then(savedSkill => res.json(savedSkill))\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get skill list.\r\n* @property {number} req.query.skip - Number of skills to be skipped.\r\n* @property {number} req.query.limit - Limit number of skills to be returned.\r\n* @returns {Skill[]}\r\n*/\r\nfunction list(req, res, next) {\r\n    const { limit = 20, skip = 0 } = req.query;\r\n\r\n    let queryObj = buildQuery(req);\r\n    \r\n    return Skill.find(queryObj.length > 0 ? {$or: queryObj} : {})\r\n        .sort({ createdAt: -1 })\r\n        .skip(skip)\r\n        .limit(limit)\r\n        .then(skills => res.json(skills))\r\n        .catch(e => next(e));\r\n\r\n\r\n    // Skill.list({ limit, skip })\r\n    // .then(skills => res.json(skills))\r\n    // .catch(e => next(e));\r\n}\r\n\r\nfunction buildQuery(req){\r\n    if (Object.keys(req.query).length === 0) return [];\r\n    var array = [];\r\n    for (var key in req.query) {\r\n        var obj = {};\r\n        obj[key] = req.query[key];\r\n        array.push(obj);\r\n    }\r\n    return array;\r\n}\r\n\r\n\r\n/**\r\n* Delete skill.\r\n* @returns {Skill}\r\n*/\r\nfunction remove(req, res, next) {\r\n    const skill = req.skill;\r\n    skill.remove()\r\n    .then(deletedSkill => res.json(deletedSkill))\r\n    .catch(e => next(e));\r\n}\r\n\r\nexport default { load, get, create, update, list, remove, search };\r\n"]}