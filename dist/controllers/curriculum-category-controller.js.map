{"version":3,"sources":["../../src/server/controllers/curriculum-category-controller.js"],"names":["load","req","res","next","id","get","then","curriculumCategory","catch","e","create","find","body","exec","result","length","save","savedCurriculumCategory","update","prop","list","query","limit","skip","queryObj","buildQuery","$or","sort","createdAt","curriculumCategorys","Object","keys","array","key","obj","push","search","regex","RegExp","params","keyword","name","$regex","organization","curriculumCategories","remove","deletedCurriculumCategory"],"mappings":"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","file":"curriculum-category-controller.js","sourcesContent":["import {CurriculumCategory} from '../models';\r\nimport APIError from '../lib/APIError';\r\nimport httpStatus from 'http-status';\r\nimport Constants from '../lib/constants';\r\n/**\r\n* Load curriculumCategory and append to req.\r\n*/\r\nfunction load(req, res, next, id) {\r\n    CurriculumCategory.get(id)\r\n    .then((curriculumCategory) => {\r\n        req.curriculumCategory = curriculumCategory;\r\n        return next();\r\n    })\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get curriculumCategory\r\n* @returns {CurriculumCategory}\r\n*/\r\nfunction get(req, res) {\r\n    return req.curriculumCategory;\r\n}\r\n\r\n/**\r\n* check if exists first, if exists, return, otherwise create\r\n* @returns {CurriculumCategory}\r\n*/\r\nfunction create(req, res, next) {\r\n    return CurriculumCategory.find(req.body).exec()\r\n        .then(result => {\r\n            if(result && result.length > 0){\r\n                return result[0]\r\n            }\r\n            return new CurriculumCategory(req.body)\r\n            .save()\r\n            .then(savedCurriculumCategory => savedCurriculumCategory)\r\n            .catch(e => next(e));\r\n        })\r\n        .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Update existing curriculumCategory\r\n* @returns {CurriculumCategory}\r\n*/\r\nfunction update(req, res, next) {\r\n    let curriculumCategory = req.curriculumCategory;\r\n    for(let prop in req.body){\r\n        curriculumCategory[prop] = req.body[prop];\r\n    }\r\n    return curriculumCategory.save()\r\n    .then(savedCurriculumCategory => savedCurriculumCategory)\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get curriculumCategory list.\r\n* @property {number} req.query.skip - Number of curriculumCategorys to be skipped.\r\n* @property {number} req.query.limit - Limit number of curriculumCategorys to be returned.\r\n* @returns {CurriculumCategory[]}\r\n*/ \r\nfunction list(req, res, next) {\r\n    const { limit = 20, skip = 0 } = req.query;\r\n    delete req.query.limit;\r\n    delete req.query.skip;    \r\n    let queryObj = buildQuery(req);\r\n        \r\n    return CurriculumCategory.find(queryObj.length > 0 ? {$or: queryObj} : {})\r\n        .sort({ createdAt: -1 })\r\n        .skip(skip)\r\n        .limit(limit)\r\n        .then(curriculumCategorys => curriculumCategorys)\r\n        .catch(e => next(e));\r\n}\r\n\r\nfunction buildQuery(req){\r\n    if (Object.keys(req.query).length === 0) return [];\r\n    var array = [];\r\n    for (var key in req.query) {\r\n        // if (_.indexOf(dateKeys, key) > -1) {\r\n        //     if (key == 'startDate') {\r\n        //         array.push({ createdAt: { $gt: req.query[key] } });\r\n        //     }\r\n        //     if (key == 'endDate') array.push({ createdAt: { $lt: req.query[key] } });\r\n        // } else {\r\n            var obj = {};\r\n            obj[key] = req.query[key];\r\n            array.push(obj);\r\n        // }\r\n    }\r\n    return array;\r\n}\r\n\r\n/**\r\n* Get skill\r\n* @returns {Skill}\r\n* https://medium.com/@apurvashastry/build-a-cool-database-search-using-these-mongodb-full-text-search-features-on-mongoose-cf2803257f9\r\n*/\r\nfunction search(req, res, next) {\r\n    var regex = new RegExp(req.params.keyword,'ig')\r\n    return CurriculumCategory.find({\r\n        name: {\r\n            $regex: regex\r\n        },\r\n        organization: req.query.organization\r\n    })\r\n    .exec()\r\n    .then((curriculumCategories) => curriculumCategories)\r\n    .catch(e => next(e));\r\n}\r\n\r\n\r\n/**\r\n* Delete curriculumCategory.\r\n* @returns {CurriculumCategory}\r\n*/\r\nfunction remove(req, res, next) {\r\n    const curriculumCategory = req.curriculumCategory;\r\n    return curriculumCategory.remove()\r\n    .then(deletedCurriculumCategory => deletedCurriculumCategory)\r\n    .catch(e => next(e));\r\n}\r\n\r\nexport default { load, get, create, update, list, remove, search };\r\n"]}