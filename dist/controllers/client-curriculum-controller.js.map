{"version":3,"sources":["../../src/server/controllers/client-curriculum-controller.js"],"names":["load","req","res","next","id","get","then","clientCurriculum","catch","e","getByClient","find","client","params","clientId","populate","sort","exec","clientCurriculums","create","body","save","savedClientCurriculum","update","prop","list","query","limit","skip","queryObj","buildQuery","length","$and","createdAt","Object","keys","array","key","obj","push","remove","deletedClientCurriculum"],"mappings":"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","file":"client-curriculum-controller.js","sourcesContent":["import {ClientCurriculum} from '../models';\r\nimport APIError from '../lib/APIError';\r\nimport httpStatus from 'http-status';\r\nimport Constants from '../lib/constants';\r\n/**\r\n* Load clientCurriculum and append to req.\r\n*/\r\nfunction load(req, res, next, id) {\r\n    ClientCurriculum.get(id)\r\n    .then((clientCurriculum) => {\r\n        req.clientCurriculum = clientCurriculum;\r\n        return next();\r\n    })\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Load clientCurriculum and append to req.\r\n*/\r\nfunction getByClient(req, res, next) {\r\n    return ClientCurriculum.find({client: req.params.clientId})\r\n    .populate('client appointment curriculum')\r\n    .sort('-createdAt')\r\n    .exec()    \r\n    .then((clientCurriculums) => clientCurriculums)\r\n    .catch(e => next(e));\r\n}\r\n\r\n\r\n/**\r\n* Get clientCurriculum\r\n* @returns {ClientCurriculum}\r\n*/\r\nfunction get(req, res) {\r\n    return req.clientCurriculum;\r\n}\r\n\r\n/**\r\n* Checks if user exists with same email as clientCurriculum.  If not, it creates a new User with the email provided and a default password. Then creates the ClientCurriculum to reside in the new user\r\n* @returns {ClientCurriculum}\r\n*/\r\nfunction create(req, res, next) {\r\n   return new ClientCurriculum(req.body)\r\n        .save()\r\n        .then(savedClientCurriculum => savedClientCurriculum)\r\n        .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Update existing clientCurriculum\r\n* @returns {ClientCurriculum}\r\n*/\r\nfunction update(req, res, next) {\r\n    const clientCurriculum = req.clientCurriculum;\r\n    for(let prop in req.body){\r\n        clientCurriculum[prop] = req.body[prop];\r\n    }\r\n    return clientCurriculum.save()\r\n    .then(savedClientCurriculum => savedClientCurriculum)\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get clientCurriculum list.\r\n* @property {number} req.query.skip - Number of clientCurriculums to be skipped.\r\n* @property {number} req.query.limit - Limit number of clientCurriculums to be returned.\r\n* @returns {ClientCurriculum[]}\r\n*/\r\nfunction list(req, res, next) {\r\n    const { limit = 20, skip = 0 } = req.query;\r\n    delete req.query.limit;\r\n    delete req.query.skip;    \r\n    let queryObj = buildQuery(req);\r\n        \r\n    return ClientCurriculum.find(queryObj.length > 0 ? {$and: queryObj} : {})\r\n        .sort({ createdAt: -1 })\r\n        .populate('curriculum client appointment')                \r\n        .skip(skip)\r\n        .limit(limit)\r\n        .then(clientCurriculums => clientCurriculums)\r\n        .catch(e => next(e));\r\n}\r\n\r\nfunction buildQuery(req){\r\n    if (Object.keys(req.query).length === 0) return [];\r\n    var array = [];\r\n    for (var key in req.query) {\r\n        // if (_.indexOf(dateKeys, key) > -1) {\r\n        //     if (key == 'startDate') {\r\n        //         array.push({ createdAt: { $gt: req.query[key] } });\r\n        //     }\r\n        //     if (key == 'endDate') array.push({ createdAt: { $lt: req.query[key] } });\r\n        // } else {\r\n            var obj = {};\r\n            obj[key] = req.query[key];\r\n            array.push(obj);\r\n        // }\r\n    }\r\n    return array;\r\n}\r\n\r\n/**\r\n* Delete clientCurriculum.\r\n* @returns {ClientCurriculum}\r\n*/\r\nfunction remove(req, res, next) {\r\n    const clientCurriculum = req.clientCurriculum;\r\n    return clientCurriculum.remove()\r\n    .then(deletedClientCurriculum => deletedClientCurriculum)\r\n    .catch(e => next(e));\r\n}\r\n\r\nexport default { load, get, create, update, list, remove, getByClient };\r\n"]}