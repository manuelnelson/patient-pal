{"version":3,"sources":["../../src/server/controllers/user-controller.js"],"names":["load","req","res","next","id","get","then","user","catch","e","json","create","role","body","email","password","getByEmail","existingUser","err","UNAUTHORIZED","console","log","save","savedUser","roles","Professional","Admin","list","query","name","organization","org","length","createProfessional","Client","status","client","savedClient","authToken","createToken","_id","professional","savedProfessional","update","limit","skip","users","remove","deletedUser"],"mappings":"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","file":"user-controller.js","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport {User, Professional} from '../models';\r\nimport AuthCtrl from './auth-controller';\r\nimport OrganizationCtrl from './organization-controller';\r\nimport APIError from '../lib/APIError';\r\nimport httpStatus from 'http-status';\r\nimport config from '../config';\r\nimport constants from '../lib/constants';\r\n\r\n/**\r\n* Load user and append to req.\r\n*/\r\nfunction load(req, res, next, id) {\r\n    User.get(id)\r\n    .then((user) => {\r\n        req.user = user;\r\n        return next();\r\n    })\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get user\r\n* @returns {User}\r\n*/\r\nfunction get(req, res) {\r\n    return res.json(req.user);\r\n}\r\n\r\n/**\r\n* Create new user\r\n* @returns {User}\r\n*/\r\nfunction create(req, res, next) {\r\n    const user = new User({\r\n        role: req.body.role,\r\n        email: req.body.email,\r\n        password: req.body.password\r\n    });\r\n\r\n    //check if user already exists\r\n    return User.getByEmail(user.email)\r\n    .then(existingUser=>{\r\n        if(existingUser)\r\n        {\r\n            const err = new APIError('Authentication error: User Already Exists', httpStatus.UNAUTHORIZED, true);\r\n            return next(err);\r\n        } else {\r\n            console.log('1')\r\n            user.save()\r\n            .then(savedUser => {\r\n                console.log('2')                \r\n                if(savedUser.role == constants.roles.Professional || savedUser.role == constants.roles.Admin){\r\n                    console.log('3')                \r\n                    //get organization if it exists, otherwise create\r\n                    return OrganizationCtrl.list({query: {name: req.body.organization}},res,next).then(org => {\r\n                        console.log('4')                \r\n                        if(!org || org.length === 0){\r\n                            return OrganizationCtrl.create({body: {name: req.body.organization}},res,next).then(org =>{\r\n                              return createProfessional(req,res,next,savedUser,org);  \r\n                            })        \r\n                        } \r\n                        return createProfessional(req,res,next,savedUser,org[0]);  \r\n                    })\r\n                }\r\n                else{\r\n                    //create the professional asynchronously\r\n                    return new Client({\r\n                        email: req.body.email,\r\n                        status: 1\r\n                    }).save().then(savedClient =>{\r\n                        savedUser.client = savedClient;\r\n                        savedUser.save();\r\n                        //log user in\r\n                        let authToken = AuthCtrl.createToken(savedUser);\r\n                        return res.json(authToken);\r\n                    });\r\n                    \r\n                }\r\n            })\r\n            .catch(e => next(e));\r\n        }\r\n    })\r\n    .catch(e => next(e));\r\n}\r\n\r\nfunction createProfessional(req,res,next, savedUser, organization){\r\n    console.log('5')                    \r\n    return new Professional({\r\n        email: req.body.email,\r\n        organization: organization._id,\r\n        status: 1\r\n    }).save()\r\n    .then(savedProfessional =>{\r\n        savedUser.professional = savedProfessional;\r\n        savedUser.save();\r\n        //log user in\r\n        let authToken = AuthCtrl.createToken(savedUser);\r\n        return res.json(authToken);\r\n    })\r\n    .catch(e => next(e));\r\n\r\n}\r\n\r\n/**\r\n* Update existing user\r\n* @property {string} req.body.email - The email of user.\r\n* @returns {User}\r\n*/\r\nfunction update(req, res, next) {\r\n    const user = req.user;\r\n    user.email = req.body.email;\r\n\r\n    return user.save()\r\n    .then(savedUser => res.json(savedUser))\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get user list.\r\n* @property {number} req.query.skip - Number of users to be skipped.\r\n* @property {number} req.query.limit - Limit number of users to be returned.\r\n* @returns {User[]}\r\n*/\r\nfunction list(req, res, next) {\r\n    const { limit = 50, skip = 0 } = req.query;\r\n    return User.list({ limit, skip })\r\n    .then(users => res.json(users))\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Delete user.\r\n* @returns {User}\r\n*/\r\nfunction remove(req, res, next) {\r\n    console.log('testt');        \r\n    const user = req.user;\r\n    return user.remove().then(deletedUser => {\r\n        return res.json(deletedUser)\r\n    })\r\n    .catch(e => next(e));\r\n}\r\n\r\nexport default { load, get, create, update, list, remove };\r\n"]}