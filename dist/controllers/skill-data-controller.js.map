{"version":3,"sources":["../../src/server/controllers/skill-data-controller.js"],"names":["load","req","res","next","id","get","then","skillData","catch","e","json","create","body","save","savedSkillData","update","prop","list","query","limit","skip","skillDatas","remove","deletedSkillData"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AACA;;;AAGA,SAASA,IAAT,CAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,EAA9B,EAAkC;AAC9B,sBAAUC,GAAV,CAAcD,EAAd,EACCE,IADD,CACM,UAACC,SAAD,EAAe;AACjBN,YAAIM,SAAJ,GAAgBA,SAAhB;AACA,eAAOJ,MAAP;AACH,KAJD,EAKCK,KALD,CAKO;AAAA,eAAKL,KAAKM,CAAL,CAAL;AAAA,KALP;AAMH;;AAED;;;;AAIA,SAASJ,GAAT,CAAaJ,GAAb,EAAkBC,GAAlB,EAAuB;AACnB,WAAOA,IAAIQ,IAAJ,CAAST,IAAIM,SAAb,CAAP;AACH;;AAED;;;;AAIA,SAASI,MAAT,CAAgBV,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AAC5B,QAAMI,YAAY,sBAAcN,IAAIW,IAAlB,EACbC,IADa,GAEbP,IAFa,CAER;AAAA,eAAkBJ,IAAIQ,IAAJ,CAASI,cAAT,CAAlB;AAAA,KAFQ,EAGbN,KAHa,CAGP;AAAA,eAAKL,KAAKM,CAAL,CAAL;AAAA,KAHO,CAAlB;AAIH;;AAED;;;;AAIA,SAASM,MAAT,CAAgBd,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AAC5B,QAAMI,YAAYN,IAAIM,SAAtB;AACA,SAAI,IAAIS,IAAR,IAAgBf,IAAIM,SAApB,EAA8B;AAC1BA,kBAAUS,IAAV,IAAkBf,IAAIM,SAAJ,CAAcS,IAAd,CAAlB;AACH;AACDT,cAAUM,IAAV,GACCP,IADD,CACM;AAAA,eAAkBJ,IAAIQ,IAAJ,CAASI,cAAT,CAAlB;AAAA,KADN,EAECN,KAFD,CAEO;AAAA,eAAKL,KAAKM,CAAL,CAAL;AAAA,KAFP;AAGH;;AAED;;;;;;AAMA,SAASQ,IAAT,CAAchB,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AAAA,qBACOF,IAAIiB,KADX;AAAA,sCAClBC,KADkB;AAAA,QAClBA,KADkB,oCACV,EADU;AAAA,qCACNC,IADM;AAAA,QACNA,IADM,mCACC,CADD;;AAE1B,WAAOnB,IAAIiB,KAAJ,CAAUC,KAAjB;AACA,WAAOlB,IAAIiB,KAAJ,CAAUE,IAAjB;AACA,sBAAUH,IAAV,CAAe,EAAEE,YAAF,EAASC,UAAT,EAAeF,OAAOjB,IAAIiB,KAA1B,EAAf,EACCZ,IADD,CACM;AAAA,eAAcJ,IAAIQ,IAAJ,CAASW,UAAT,CAAd;AAAA,KADN,EAECb,KAFD,CAEO;AAAA,eAAKL,KAAKM,CAAL,CAAL;AAAA,KAFP;;AAIA;AACH;;AAED;;;;AAIA,SAASa,MAAT,CAAgBrB,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AAC5B,QAAMI,YAAYN,IAAIM,SAAtB;AACAA,cAAUe,MAAV,GACChB,IADD,CACM;AAAA,eAAoBJ,IAAIQ,IAAJ,CAASa,gBAAT,CAApB;AAAA,KADN,EAECf,KAFD,CAEO;AAAA,eAAKL,KAAKM,CAAL,CAAL;AAAA,KAFP;AAGH;;kBAEc,EAAET,UAAF,EAAQK,QAAR,EAAaM,cAAb,EAAqBI,cAArB,EAA6BE,UAA7B,EAAmCK,cAAnC,E","file":"skill-data-controller.js","sourcesContent":["import {SkillData} from '../models';\r\nimport APIError from '../lib/APIError';\r\nimport httpStatus from 'http-status';\r\nimport Constants from '../lib/constants';\r\n/**\r\n* Load skillData and append to req.\r\n*/\r\nfunction load(req, res, next, id) {\r\n    SkillData.get(id)\r\n    .then((skillData) => {\r\n        req.skillData = skillData;\r\n        return next();\r\n    })\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get skillData\r\n* @returns {SkillData}\r\n*/\r\nfunction get(req, res) {\r\n    return res.json(req.skillData);\r\n}\r\n\r\n/**\r\n* Checks if user exists with same email as skillData.  If not, it creates a new User with the email provided and a default password. Then creates the SkillData to reside in the new user\r\n* @returns {SkillData}\r\n*/\r\nfunction create(req, res, next) {\r\n    const skillData = new SkillData(req.body)\r\n        .save()\r\n        .then(savedSkillData => res.json(savedSkillData))\r\n        .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Update existing skillData\r\n* @returns {SkillData}\r\n*/\r\nfunction update(req, res, next) {\r\n    const skillData = req.skillData;\r\n    for(let prop in req.skillData){\r\n        skillData[prop] = req.skillData[prop];\r\n    }\r\n    skillData.save()\r\n    .then(savedSkillData => res.json(savedSkillData))\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get skillData list.\r\n* @property {number} req.query.skip - Number of skillDatas to be skipped.\r\n* @property {number} req.query.limit - Limit number of skillDatas to be returned.\r\n* @returns {SkillData[]}\r\n*/\r\nfunction list(req, res, next) {\r\n    const { limit = 20, skip = 0 } = req.query;\r\n    delete req.query.limit;\r\n    delete req.query.skip;\r\n    SkillData.list({ limit, skip, query: req.query })\r\n    .then(skillDatas => res.json(skillDatas))\r\n    .catch(e => next(e));\r\n\r\n    //SkillData.list({ limit, skip })\r\n}\r\n\r\n/**\r\n* Delete skillData.\r\n* @returns {SkillData}\r\n*/\r\nfunction remove(req, res, next) {\r\n    const skillData = req.skillData;\r\n    skillData.remove()\r\n    .then(deletedSkillData => res.json(deletedSkillData))\r\n    .catch(e => next(e));\r\n}\r\n\r\nexport default { load, get, create, update, list, remove };\r\n"]}