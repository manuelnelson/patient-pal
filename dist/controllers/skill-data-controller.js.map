{"version":3,"sources":["../../src/server/controllers/skill-data-controller.js"],"names":["load","req","res","next","id","get","then","skillData","catch","e","create","body","save","savedSkillData","update","prop","dateKeys","clientCurriculumKeys","listReport","query","limit","skip","clientId","client","queryArray","buildQueryObj","find","exec","ids","clientCurriculums","map","curriculum","_id","push","clientCurriculum","$in","$and","console","log","populate","path","sort","trialNumber","parseInt","skillDatas","Object","keys","length","array","key","indexOf","createdAt","$gt","$lt","obj","list","queryObj","buildQuery","remove","deletedSkillData"],"mappings":"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","file":"skill-data-controller.js","sourcesContent":["import {SkillData, ClientCurriculum} from '../models';\r\nimport APIError from '../lib/APIError';\r\nimport httpStatus from 'http-status';\r\nimport _ from 'lodash';\r\nimport Constants from '../lib/constants';\r\n/**\r\n* Load skillData and append to req.\r\n*/\r\nfunction load(req, res, next, id) {\r\n    SkillData.get(id)\r\n    .then((skillData) => {\r\n        req.skillData = skillData;\r\n        return next();\r\n    })\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get skillData\r\n* @returns {SkillData}\r\n*/\r\nfunction get(req, res) {\r\n    return (req.skillData);\r\n}\r\n\r\n/**\r\n* Checks if user exists with same email as skillData.  If not, it creates a new User with the email provided and a default password. Then creates the SkillData to reside in the new user\r\n* @returns {SkillData}\r\n*/\r\nfunction create(req, res, next) {\r\n    return new SkillData(req.body)\r\n        .save()\r\n        .then(savedSkillData => (savedSkillData))\r\n        .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Update existing skillData\r\n* @returns {SkillData}\r\n*/\r\nfunction update(req, res, next) {\r\n    const skillData = req.skillData;\r\n    for(let prop in req.body){\r\n        skillData[prop] = req.body[prop];\r\n    }\r\n    return skillData.save()\r\n    .then(savedSkillData => (savedSkillData))\r\n    .catch(e => next(e));\r\n}\r\nlet dateKeys = ['startDate', 'endDate'];\r\nlet clientCurriculumKeys = ['client'];\r\n\r\n/**\r\n* Get skillData list.\r\n* @property {number} req.query.skip - Number of skillDatas to be skipped.\r\n* @property {number} req.query.limit - Limit number of skillDatas to be returned.\r\n* @returns {SkillData[]}\r\n*/\r\n// function list(req, res, next) {\r\n//     const { limit = 20, skip = 0 } = req.query;\r\n//     delete req.query.limit;\r\n//     delete req.query.skip;\r\n//     let query = SkillData;\r\n//     query = buildQuery(req, query);\r\n//     return query.populate('skill')\r\n//         .populate( {path:'clientCurriculum', populate: {path: 'curriculum client'}})\r\n//         .sort({ trialNumber: -1 })\r\n//         .skip(parseInt(skip)).limit(parseInt(limit))\r\n//         .exec()\r\n//         .then(skillData => skillData)\r\n//         .catch(e => next(e));\r\n// }\r\n\r\n//this query is specific enough i want to separate it out from rest of traditional REST responses\r\nfunction listReport(req, res, next){\r\n    const { limit = 20, skip = 0 } = req.query;\r\n    delete req.query.limit;\r\n    delete req.query.skip;\r\n    //if we are searching by client, we need to do a nested query by client curriculum\r\n    let clientId = req.query.client ? req.query.client : null;\r\n    delete req.query.client;\r\n\r\n    let query = SkillData;\r\n    let queryArray = buildQueryObj(req, query);\r\n    return ClientCurriculum.find({client: clientId}).exec()\r\n        .then(clientCurriculums => {\r\n            let ids = clientCurriculums.map(curriculum => curriculum._id);  \r\n            queryArray.push({clientCurriculum: {$in: ids}});\r\n            query = query.find({$and: queryArray});\r\n            console.log(queryArray)\r\n            return query.populate('skill')\r\n                .populate( {path:'clientCurriculum', populate: {path: 'curriculum client'}})\r\n                .sort({ trialNumber: -1 })\r\n                .skip(parseInt(skip)).limit(parseInt(limit))\r\n                .exec()\r\n                .then(skillDatas => skillDatas)\r\n                .catch(e => next(e));\r\n        })        \r\n}\r\n\r\n//list of fields that are relationships of type many\r\n//builds a query for \r\nfunction buildQueryObj(req, query){\r\n    if(Object.keys(req.query).length === 0)\r\n        return [];\r\n    let array = [];\r\n    for(let key in req.query){\r\n        if(_.indexOf(dateKeys, key) > -1){\r\n            if(key == 'startDate'){\r\n                array.push({createdAt: {$gt: req.query[key]}});\r\n            }                \r\n            if(key == 'endDate')\r\n                array.push({createdAt: {$lt: req.query[key]}});\r\n        } \r\n        else{\r\n            let obj = {};\r\n            obj[key] = req.query[key];\r\n            array.push(obj);\r\n        }\r\n    }\r\n    return array;\r\n}\r\n\r\n\r\nfunction list(req, res, next) {\r\n    const { limit = 20, skip = 0 } = req.query; \r\n    delete req.query.limit;\r\n    delete req.query.skip;    \r\n    let queryObj = buildQuery(req);\r\n    console.log(queryObj);\r\n    \r\n    return SkillData.find(queryObj.length > 0 ? {$and: queryObj} : {})\r\n        .populate( {path:'clientCurriculum', populate: {path: 'curriculum client'}})\r\n        .populate('skill')\r\n        .sort({ trialNumber: -1 })\r\n        .skip(parseInt(skip)).limit(parseInt(limit))\r\n        .exec()\r\n        .then(skillData => skillData)\r\n        .catch(e => next(e));\r\n}\r\n\r\nfunction buildQuery(req){\r\n    if (Object.keys(req.query).length === 0) return [];\r\n    var array = [];\r\n    for (var key in req.query) {\r\n        var obj = {};\r\n        obj[key] = req.query[key];\r\n        array.push(obj);\r\n    }\r\n    return array;\r\n}\r\n\r\n\r\n/**\r\n* Delete skillData.\r\n* @returns {SkillData}\r\n*/\r\nfunction remove(req, res, next) {\r\n    const skillData = req.skillData;\r\n    return skillData.remove()\r\n    .then(deletedSkillData => (deletedSkillData))\r\n    .catch(e => next(e));\r\n}\r\n\r\nexport default { load, get, create, update, list, remove, listReport };\r\n"]}