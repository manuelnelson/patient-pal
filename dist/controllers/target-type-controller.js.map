{"version":3,"sources":["../../src/server/controllers/target-type-controller.js"],"names":["load","req","res","next","id","get","then","targetType","catch","e","json","create","body","save","savedTargetType","update","prop","list","query","limit","skip","targetTypes","remove","deletedTargetType"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AACA;;;AAGA,SAASA,IAAT,CAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,EAA9B,EAAkC;AAC9B,uBAAWC,GAAX,CAAeD,EAAf,EACCE,IADD,CACM,UAACC,UAAD,EAAgB;AAClBN,YAAIM,UAAJ,GAAiBA,UAAjB;AACA,eAAOJ,MAAP;AACH,KAJD,EAKCK,KALD,CAKO;AAAA,eAAKL,KAAKM,CAAL,CAAL;AAAA,KALP;AAMH;;AAED;;;;AAIA,SAASJ,GAAT,CAAaJ,GAAb,EAAkBC,GAAlB,EAAuB;AACnB,WAAOA,IAAIQ,IAAJ,CAAST,IAAIM,UAAb,CAAP;AACH;;AAED;;;;AAIA,SAASI,MAAT,CAAgBV,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AAC5B,QAAMI,aAAa,uBAAeN,IAAIW,IAAnB,EACdC,IADc,GAEdP,IAFc,CAET;AAAA,eAAmBJ,IAAIQ,IAAJ,CAASI,eAAT,CAAnB;AAAA,KAFS,EAGdN,KAHc,CAGR;AAAA,eAAKL,KAAKM,CAAL,CAAL;AAAA,KAHQ,CAAnB;AAIH;;AAED;;;;AAIA,SAASM,MAAT,CAAgBd,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AAC5B,QAAMI,aAAaN,IAAIM,UAAvB;AACA,SAAI,IAAIS,IAAR,IAAgBf,IAAIM,UAApB,EAA+B;AAC3BA,mBAAWS,IAAX,IAAmBf,IAAIM,UAAJ,CAAeS,IAAf,CAAnB;AACH;AACDT,eAAWM,IAAX,GACCP,IADD,CACM;AAAA,eAAmBJ,IAAIQ,IAAJ,CAASI,eAAT,CAAnB;AAAA,KADN,EAECN,KAFD,CAEO;AAAA,eAAKL,KAAKM,CAAL,CAAL;AAAA,KAFP;AAGH;;AAED;;;;;;AAMA,SAASQ,IAAT,CAAchB,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AAAA,qBACOF,IAAIiB,KADX;AAAA,sCAClBC,KADkB;AAAA,QAClBA,KADkB,oCACV,EADU;AAAA,qCACNC,IADM;AAAA,QACNA,IADM,mCACC,CADD;;AAE1B,uBAAWH,IAAX,CAAgB,EAAEE,YAAF,EAASC,UAAT,EAAhB,EACCd,IADD,CACM;AAAA,eAAeJ,IAAIQ,IAAJ,CAASW,WAAT,CAAf;AAAA,KADN,EAECb,KAFD,CAEO;AAAA,eAAKL,KAAKM,CAAL,CAAL;AAAA,KAFP;AAGH;;AAED;;;;AAIA,SAASa,MAAT,CAAgBrB,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AAC5B,QAAMI,aAAaN,IAAIM,UAAvB;AACAA,eAAWe,MAAX,GACChB,IADD,CACM;AAAA,eAAqBJ,IAAIQ,IAAJ,CAASa,iBAAT,CAArB;AAAA,KADN,EAECf,KAFD,CAEO;AAAA,eAAKL,KAAKM,CAAL,CAAL;AAAA,KAFP;AAGH;;kBAEc,EAAET,UAAF,EAAQK,QAAR,EAAaM,cAAb,EAAqBI,cAArB,EAA6BE,UAA7B,EAAmCK,cAAnC,E","file":"target-type-controller.js","sourcesContent":["import {TargetType} from '../models';\r\nimport APIError from '../lib/APIError';\r\nimport httpStatus from 'http-status';\r\nimport Constants from '../lib/constants';\r\n/**\r\n* Load targetType and append to req.\r\n*/\r\nfunction load(req, res, next, id) {\r\n    TargetType.get(id)\r\n    .then((targetType) => {\r\n        req.targetType = targetType;\r\n        return next();\r\n    })\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get targetType\r\n* @returns {TargetType}\r\n*/\r\nfunction get(req, res) {\r\n    return res.json(req.targetType);\r\n}\r\n\r\n/**\r\n* Checks if user exists with same email as targetType.  If not, it creates a new User with the email provided and a default password. Then creates the TargetType to reside in the new user\r\n* @returns {TargetType}\r\n*/\r\nfunction create(req, res, next) {\r\n    const targetType = new TargetType(req.body)\r\n        .save()\r\n        .then(savedTargetType => res.json(savedTargetType))\r\n        .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Update existing targetType\r\n* @returns {TargetType}\r\n*/\r\nfunction update(req, res, next) {\r\n    const targetType = req.targetType;\r\n    for(let prop in req.targetType){\r\n        targetType[prop] = req.targetType[prop];\r\n    }\r\n    targetType.save()\r\n    .then(savedTargetType => res.json(savedTargetType))\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get targetType list.\r\n* @property {number} req.query.skip - Number of targetTypes to be skipped.\r\n* @property {number} req.query.limit - Limit number of targetTypes to be returned.\r\n* @returns {TargetType[]}\r\n*/\r\nfunction list(req, res, next) {\r\n    const { limit = 20, skip = 0 } = req.query;\r\n    TargetType.list({ limit, skip })\r\n    .then(targetTypes => res.json(targetTypes))\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Delete targetType.\r\n* @returns {TargetType}\r\n*/\r\nfunction remove(req, res, next) {\r\n    const targetType = req.targetType;\r\n    targetType.remove()\r\n    .then(deletedTargetType => res.json(deletedTargetType))\r\n    .catch(e => next(e));\r\n}\r\n\r\nexport default { load, get, create, update, list, remove };\r\n"]}