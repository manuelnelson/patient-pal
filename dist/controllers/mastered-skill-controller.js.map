{"version":3,"sources":["../../src/server/controllers/mastered-skill-controller.js"],"names":["_","load","req","res","next","id","get","then","masteredSkill","catch","e","dateKeys","clientCurriculumKeys","create","query","client","body","curriculum","list","clientCurriculums","length","skill","started","createdAt","numberOfTrials","parseInt","save","savedmasteredSkill","BAD_REQUEST","update","prop","limit","skip","queryArray","buildQueryObj","find","$or","sort","populate","path","masteredSkills","Object","keys","array","key","indexOf","push","$gt","$lt","obj","buildQuery","remove","deletedmasteredSkill"],"mappings":"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","file":"mastered-skill-controller.js","sourcesContent":["import {MasteredSkill} from '../models';\r\nimport {ClientCurriculumCtrl} from '../controllers';\r\nimport APIError from '../lib/APIError';\r\nimport httpStatus from 'http-status';\r\nimport Constants from '../lib/constants';\r\nimport * as _ from 'lodash';\r\n/**\r\n* Load masteredSkill and append to req.\r\n*/\r\nfunction load(req, res, next, id) {\r\n    MasteredSkill.get(id)\r\n    .then((masteredSkill) => {\r\n        req.masteredSkill = masteredSkill;\r\n        return next();\r\n    })\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get masteredSkill\r\n* @returns {masteredSkill}\r\n*/\r\nfunction get(req, res) {\r\n    return req.masteredSkill;\r\n}\r\n\r\nlet dateKeys = ['startDate', 'endDate'];\r\nlet clientCurriculumKeys = ['client'];\r\n\r\n/**\r\n* Checks if user exists with same email as masteredSkill.  If not, it creates a new User with the email provided and a default password. Then creates the masteredSkill to reside in the new user\r\n* @returns {masteredSkill}\r\n*/\r\nfunction create(req, res, next) {\r\n    //properties from the request still need to be filled out.\r\n    let query = {query:{client:req.body.client,curriculum:req.body.curriculum}};\r\n    return ClientCurriculumCtrl.list(query,res,next).then(clientCurriculums => {\r\n        if(clientCurriculums && clientCurriculums.length > 0){\r\n            let masteredSkill = {\r\n                curriculum: req.body.curriculum,\r\n                client: req.body.client,\r\n                skill: req.body.skill,\r\n                //start date is the date of the first clientCurriculum\r\n                started: clientCurriculums[0].createdAt,\r\n                numberOfTrials: clientCurriculums.length * parseInt(req.body.numberOfTrials)\r\n            };\r\n            return new MasteredSkill(masteredSkill)\r\n                .save()\r\n                .then(savedmasteredSkill => savedmasteredSkill)\r\n                .catch(e => next(e));\r\n    \r\n        }else{\r\n            return next(new APIError(`There's been an issue trying to master this skill`, httpStatus.BAD_REQUEST, true));            \r\n        }\r\n    })\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Update existing masteredSkill\r\n* @returns {masteredSkill}\r\n*/\r\nfunction update(req, res, next) {\r\n    const masteredSkill = req.masteredSkill;\r\n    for(let prop in req.body){\r\n        masteredSkill[prop] = req.body[prop];\r\n    }\r\n    return masteredSkill.save()\r\n    .then(savedmasteredSkill => savedmasteredSkill)\r\n    .catch(e => next(e));\r\n}\r\n\r\n/**\r\n* Get masteredSkill list.\r\n* @property {number} req.query.skip - Number of masteredSkills to be skipped.\r\n* @property {number} req.query.limit - Limit number of masteredSkills to be returned.\r\n* @returns {masteredSkill[]}\r\n*/\r\nfunction list(req, res, next) {\r\n    const { limit = 20, skip = 0 } = req.query;\r\n    delete req.query.limit;\r\n    delete req.query.skip;    \r\n    \r\n    let queryArray = buildQueryObj(req);\r\n\r\n//    let queryObj = buildQuery(req);\r\n        \r\n    return MasteredSkill.find(queryArray.length > 0 ? {$or: queryArray} : {})\r\n        .sort({ createdAt: -1 })\r\n        .populate({path:'skill', populate: {path:'targetType dttType'}})\r\n        .populate('client curriculum')\r\n        .skip(skip)\r\n        .limit(limit)\r\n        .then(masteredSkills => masteredSkills)\r\n        .catch(e => next(e));\r\n}\r\nfunction buildQueryObj(req){\r\n    if(Object.keys(req.query).length === 0)\r\n        return [];\r\n    let array = [];\r\n    for(let key in req.query){\r\n        if(_.indexOf(dateKeys, key) > -1){\r\n            if(key == 'startDate'){\r\n                array.push({createdAt: {$gt: req.query[key]}});\r\n            }                \r\n            if(key == 'endDate')\r\n                array.push({createdAt: {$lt: req.query[key]}});\r\n        } \r\n        else{\r\n            let obj = {};\r\n            obj[key] = req.query[key];\r\n            array.push(obj);\r\n        }\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction buildQuery(req){\r\n    if (Object.keys(req.query).length === 0) return [];\r\n    var array = [];\r\n    for (var key in req.query) {\r\n        // if (_.indexOf(dateKeys, key) > -1) {\r\n        //     if (key == 'startDate') {\r\n        //         array.push({ createdAt: { $gt: req.query[key] } });\r\n        //     }\r\n        //     if (key == 'endDate') array.push({ createdAt: { $lt: req.query[key] } });\r\n        // } else {\r\n            var obj = {};\r\n            obj[key] = req.query[key];\r\n            array.push(obj);\r\n        // }\r\n    }\r\n    return array;\r\n}\r\n\r\n/**\r\n* Delete masteredSkill.\r\n* @returns {masteredSkill}\r\n*/\r\nfunction remove(req, res, next) {\r\n    const masteredSkill = req.masteredSkill;\r\n    return masteredSkill.remove()\r\n    .then(deletedmasteredSkill => deletedmasteredSkill)\r\n    .catch(e => next(e));\r\n}\r\n\r\nexport default { load, get, create, update, list, remove };\r\n"]}