{"version":3,"sources":["../../src/server/tests/skill-data.test.js"],"names":["config","includeStack","after","done","models","modelSchemas","connection","close","describe","skillData","trialNumber","skill","clientCurriculum","it","post","send","expect","OK","then","res","body","to","equal","catch","get","_id","NOT_FOUND","message","put","be","an","delete"],"mappings":"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","file":"skill-data.test.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport request from 'supertest';\r\nimport httpStatus from 'http-status';\r\nimport chai, { expect } from 'chai'; \r\nimport app from '../index';\r\n\r\nchai.config.includeStack = true;\r\n/**\r\n * root level hooks\r\n */\r\n\r\n\r\nafter((done) => {\r\n    // required because https://github.com/Automattic/mongoose/issues/1251#issuecomment-65793092\r\n    mongoose.models = {};\r\n    mongoose.modelSchemas = {};\r\n    mongoose.connection.close();\r\n    done();\r\n});\r\n\r\n  describe('## SkillData APIs', () => {\r\n    let skillData = {\r\n      trialNumber: 2,\r\n      skill: '59d7c865fe9206132c684c36',\r\n      clientCurriculum: '59d7c865fe9206132c684c36'\r\n    };\r\n  \r\n    describe('# POST /api/skillDatas', () => {\r\n      it('should create a new skillData', (done) => {\r\n        request(app)\r\n          .post('/api/skillDatas')\r\n          .send(skillData)\r\n          .expect(httpStatus.OK)\r\n          .then((res) => {\r\n            expect(res.body.trialNumber).to.equal(skillData.trialNumber);\r\n            skillData = res.body;\r\n            done();\r\n          })\r\n          .catch(done);\r\n      });\r\n    });\r\n\r\n    describe('# GET /api/skillDatas', () => {\r\n        it('should retrieve the skillData', (done) => {\r\n          request(app)\r\n            .get('/api/skillDatas/' + skillData._id)\r\n            .expect(httpStatus.OK)\r\n            .then((res) => {\r\n              expect(res.body.trialNumber).to.equal(skillData.trialNumber);\r\n              done();\r\n            })\r\n            .catch(done);\r\n        });\r\n        it('should return not found', (done) => {\r\n            request(app)\r\n              .get('/api/skillDatas/56c787ccc67fc16ccc1a5e92')\r\n              .expect(httpStatus.NOT_FOUND)\r\n              .then((res) => {\r\n                expect(res.body.message).to.equal('Not Found');\r\n                done();\r\n              })\r\n              .catch(done);\r\n        });\r\n    });\r\n  \r\n\r\n    describe('# PUT /api/skillDatas/:userId', () => {\r\n        it('should update user details', (done) => {\r\n          skillData.trialNumber = 4;\r\n          request(app)\r\n            .put(`/api/skillDatas/${skillData._id}`)\r\n            .send(skillData)\r\n            .expect(httpStatus.OK)\r\n            .then((res) => {\r\n              expect(res.body.trialNumber).to.equal(skillData.trialNumber);\r\n              done();\r\n            })\r\n            .catch(done);\r\n        });\r\n      });\r\n\r\n      describe('# Get /api/skillDatas/', () => {\r\n        it('should search skillDatas and return array', (done) => {\r\n          request(app)\r\n            .get(`/api/skillDatas?name=${skillData.trialNumber}`)\r\n            .expect(httpStatus.OK)\r\n            .then((res) => {\r\n                expect(res.body).to.be.an('array');\r\n                done();\r\n            })\r\n            .catch(done);\r\n        });\r\n      });\r\n\r\n      describe('# DELETE /api/skillDatas', () => {\r\n        it('should delete the skillData', (done) => {\r\n          request(app)\r\n            .delete(`/api/skillDatas/${skillData._id}`)\r\n            .expect(httpStatus.OK)\r\n            .then((res) => {\r\n              expect(res.body.trialNumber).to.equal(skillData.trialNumber);\r\n              done();\r\n            })\r\n            .catch(done);\r\n        });\r\n      });\r\n  \r\n});"]}