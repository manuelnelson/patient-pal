{"version":3,"sources":["../../src/server/tests/skill.test.js"],"names":["config","includeStack","after","done","models","modelSchemas","connection","close","describe","skill","targetName","goalName","stimulus","numberOfTrials","targetType","masteryType","organization","it","post","send","expect","OK","then","res","body","to","equal","catch","get","_id","NOT_FOUND","message","put","be","an","delete"],"mappings":"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","file":"skill.test.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport request from 'supertest';\r\nimport httpStatus from 'http-status';\r\nimport chai, { expect } from 'chai';\r\nimport app from '../index';\r\n\r\nchai.config.includeStack = true;\r\n/**\r\n * root level hooks \r\n */\r\n\r\n\r\nafter((done) => {\r\n    // required because https://github.com/Automattic/mongoose/issues/1251#issuecomment-65793092\r\n    mongoose.models = {};\r\n    mongoose.modelSchemas = {};\r\n    mongoose.connection.close();\r\n    done();\r\n});\r\n\r\n  describe('## Skill APIs', () => {\r\n    let skill = {\r\n      targetName: 'test',\r\n      goalName: 'test',\r\n      stimulus: 'test',\r\n      numberOfTrials: 2,\r\n      targetType: '59d7c865fe9206132c684c36',\r\n      masteryType: 1,\r\n      organization: '59d7c865fe9206132c684c36'\r\n    };\r\n  \r\n    describe('# POST /api/skills', () => {\r\n      it('should create a new skill', (done) => {\r\n        request(app)\r\n          .post('/api/skills')\r\n          .send(skill)\r\n          .expect(httpStatus.OK)\r\n          .then((res) => {\r\n            expect(res.body.targetName).to.equal(skill.targetName);\r\n            skill = res.body;\r\n            done();\r\n          })\r\n          .catch(done);\r\n      });\r\n    });\r\n\r\n    describe('# GET /api/skills', () => {\r\n        it('should retrieve the skill', (done) => {\r\n          request(app)\r\n            .get('/api/skills/' + skill._id)\r\n            .expect(httpStatus.OK)\r\n            .then((res) => {\r\n              expect(res.body.targetName).to.equal(skill.targetName);\r\n              done();\r\n            })\r\n            .catch(done);\r\n        });\r\n        it('should return not found', (done) => {\r\n            request(app)\r\n              .get('/api/skills/56c787ccc67fc16ccc1a5e92')\r\n              .expect(httpStatus.NOT_FOUND)\r\n              .then((res) => {\r\n                expect(res.body.message).to.equal('Not Found');\r\n                done();\r\n              })\r\n              .catch(done);\r\n        });\r\n    });\r\n  \r\n\r\n    describe('# PUT /api/skills/:userId', () => {\r\n        it('should update user details', (done) => {\r\n          skill.targetName = 'bama';\r\n          request(app)\r\n            .put(`/api/skills/${skill._id}`)\r\n            .send(skill)\r\n            .expect(httpStatus.OK)\r\n            .then((res) => {\r\n              expect(res.body.targetName).to.equal('bama');\r\n              done();\r\n            })\r\n            .catch(done);\r\n        });\r\n      });\r\n\r\n      describe('# Get /api/skills/', () => {\r\n        it('should search skills and return array', (done) => {\r\n          request(app)\r\n            .get(`/api/skills?name=${skill.targetName}`)\r\n            .expect(httpStatus.OK)\r\n            .then((res) => {\r\n                expect(res.body).to.be.an('array');\r\n                done();\r\n            })\r\n            .catch(done);\r\n        });\r\n      });\r\n\r\n      describe('# DELETE /api/skills', () => {\r\n        it('should delete the skill', (done) => {\r\n          request(app)\r\n            .delete(`/api/skills/${skill._id}`)\r\n            .expect(httpStatus.OK)\r\n            .then((res) => {\r\n              expect(res.body.targetName).to.equal(skill.targetName);\r\n              done();\r\n            })\r\n            .catch(done);\r\n        });\r\n      });\r\n  \r\n});"]}