{"version":3,"sources":["../../src/server/tests/client-curriculum.test.js"],"names":["config","includeStack","after","done","models","modelSchemas","connection","close","describe","clientCurriculum","it","get","expect","OK","then","res","body","to","be","an","appt","appointment","_id","client","catch","curriculum","completed","console","log","post","send","equal","NOT_FOUND","message","put","delete"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,eAAKA,MAAL,CAAYC,YAAZ,GAA2B,IAA3B;AACA;;;;AAKAC,MAAM,UAACC,IAAD,EAAU;AACZ;AACA,qBAASC,MAAT,GAAkB,EAAlB;AACA,qBAASC,YAAT,GAAwB,EAAxB;AACA,qBAASC,UAAT,CAAoBC,KAApB;AACAJ;AACH,CAND;;AAQEK,SAAS,0BAAT,EAAqC,YAAM;AACzC;;AAEA,MAAIC,mBAAmB,EAAvB;AACAD,WAAS,wBAAT,EAAmC,YAAM;AACvCE,OAAG,yDAAH,EAA8D,UAACP,IAAD,EAAU;AACtE,gDACCQ,GADD,CACK,mBADL,EAECC,MAFD,CAEQ,qBAAWC,EAFnB,EAGCC,IAHD,CAGM,UAACC,GAAD,EAAS;AACb,0BAAOA,IAAIC,IAAX,EAAiBC,EAAjB,CAAoBC,EAApB,CAAuBC,EAAvB,CAA0B,OAA1B;AACA,YAAIC,OAAOL,IAAIC,IAAJ,CAAS,CAAT,CAAX;AACAP,2BAAmB;AACjBY,uBAAaD,KAAKE,GADD;AAEjBC,kBAAQH,KAAKG,MAAL,CAAYD;AAFH,SAAnB;AAIAnB;AACD,OAXD,EAYCqB,KAZD,CAYOrB,IAZP;AAaD,KAdD;AAeD,GAhBD;;AAkBAK,WAAS,wBAAT,EAAmC,YAAM;AACvCE,OAAG,uDAAH,EAA4D,UAACP,IAAD,EAAU;AACpE,gDACCQ,GADD,CACK,kBADL,EAECC,MAFD,CAEQ,qBAAWC,EAFnB,EAGCC,IAHD,CAGM,UAACC,GAAD,EAAS;AACb,0BAAOA,IAAIC,IAAX,EAAiBC,EAAjB,CAAoBC,EAApB,CAAuBC,EAAvB,CAA0B,OAA1B;AACA,YAAIM,aAAaV,IAAIC,IAAJ,CAAS,CAAT,CAAjB;AACAP,yBAAiBgB,UAAjB,GAA8BA,WAAWH,GAAzC;AACAb,yBAAiBiB,SAAjB,GAA6B,KAA7B;AACAvB;AACD,OATD,EAUCqB,KAVD,CAUOrB,IAVP;AAWD,KAZD;AAaD,GAdD;;AAgBAK,WAAS,+BAAT,EAA0C,YAAM;AAC9CE,OAAG,sCAAH,EAA2C,UAACP,IAAD,EAAU;AACnDwB,cAAQC,GAAR,CAAYnB,gBAAZ;AACA,gDACGoB,IADH,CACQ,wBADR,EAEGC,IAFH,CAEQrB,gBAFR,EAGGG,MAHH,CAGU,qBAAWC,EAHrB,EAIGC,IAJH,CAIQ,UAACC,GAAD,EAAS;AACb,0BAAOA,IAAIC,IAAJ,CAASU,SAAhB,EAA2BT,EAA3B,CAA8Bc,KAA9B,CAAoCtB,iBAAiBiB,SAArD;AACAjB,2BAAmBM,IAAIC,IAAvB;AACAb;AACD,OARH,EASGqB,KATH,CASSrB,IATT;AAUD,KAZD;AAaD,GAdD;;AAgBAK,WAAS,8BAAT,EAAyC,YAAM;AAC3CE,OAAG,sCAAH,EAA2C,UAACP,IAAD,EAAU;AACnD,gDACGQ,GADH,CACO,4BAA4BF,iBAAiBa,GADpD,EAEGV,MAFH,CAEU,qBAAWC,EAFrB,EAGGC,IAHH,CAGQ,UAACC,GAAD,EAAS;AACb,0BAAOA,IAAIC,IAAJ,CAASU,SAAhB,EAA2BT,EAA3B,CAA8Bc,KAA9B,CAAoCtB,iBAAiBiB,SAArD;AACAvB;AACD,OANH,EAOGqB,KAPH,CAOSrB,IAPT;AAQD,KATD;AAUAO,OAAG,yBAAH,EAA8B,UAACP,IAAD,EAAU;AACpC,gDACGQ,GADH,CACO,iDADP,EAEGC,MAFH,CAEU,qBAAWoB,SAFrB,EAGGlB,IAHH,CAGQ,UAACC,GAAD,EAAS;AACb,0BAAOA,IAAIC,IAAJ,CAASiB,OAAhB,EAAyBhB,EAAzB,CAA4Bc,KAA5B,CAAkC,WAAlC;AACA5B;AACD,OANH,EAOGqB,KAPH,CAOSrB,IAPT;AAQH,KATD;AAUH,GArBD;;AAwBAK,WAAS,sCAAT,EAAiD,YAAM;AACnDE,OAAG,4BAAH,EAAiC,UAACP,IAAD,EAAU;AACzCM,uBAAiBiB,SAAjB,GAA6B,IAA7B;AACA,gDACGQ,GADH,6BACiCzB,iBAAiBa,GADlD,EAEGQ,IAFH,CAEQrB,gBAFR,EAGGG,MAHH,CAGU,qBAAWC,EAHrB,EAIGC,IAJH,CAIQ,UAACC,GAAD,EAAS;AACb,0BAAOA,IAAIC,IAAJ,CAASU,SAAhB,EAA2BT,EAA3B,CAA8Bc,KAA9B,CAAoC,IAApC;AACA5B;AACD,OAPH,EAQGqB,KARH,CAQSrB,IART;AASD,KAXD;AAYD,GAbH;;AAeEK,WAAS,+BAAT,EAA0C,YAAM;AAC9CE,OAAG,kDAAH,EAAuD,UAACP,IAAD,EAAU;AAC/D,gDACGQ,GADH,uCAC2CF,iBAAiBiB,SAD5D,EAEGd,MAFH,CAEU,qBAAWC,EAFrB,EAGGC,IAHH,CAGQ,UAACC,GAAD,EAAS;AACX,0BAAOA,IAAIC,IAAX,EAAiBC,EAAjB,CAAoBC,EAApB,CAAuBC,EAAvB,CAA0B,OAA1B;AACAhB;AACH,OANH,EAOGqB,KAPH,CAOSrB,IAPT;AAQD,KATD;AAUD,GAXD;;AAaAK,WAAS,iCAAT,EAA4C,YAAM;AAChDE,OAAG,oCAAH,EAAyC,UAACP,IAAD,EAAU;AACjD,gDACGgC,MADH,6BACoC1B,iBAAiBa,GADrD,EAEGV,MAFH,CAEU,qBAAWC,EAFrB,EAGGC,IAHH,CAGQ,UAACC,GAAD,EAAS;AACb,0BAAOA,IAAIC,IAAJ,CAASU,SAAhB,EAA2BT,EAA3B,CAA8Bc,KAA9B,CAAoCtB,iBAAiBiB,SAArD;AACAvB;AACD,OANH,EAOGqB,KAPH,CAOSrB,IAPT;AAQD,KATD;AAUD,GAXD;AAaL,CAvHC","file":"client-curriculum.test.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport request from 'supertest';\r\nimport httpStatus from 'http-status';\r\nimport chai, { expect } from 'chai';\r\nimport app from '../index';\r\nchai.config.includeStack = true;\r\n/**\r\n * root level hooks\r\n */\r\n\r\n\r\nafter((done) => {\r\n    // required because https://github.com/Automattic/mongoose/issues/1251#issuecomment-65793092\r\n    mongoose.models = {};\r\n    mongoose.modelSchemas = {};\r\n    mongoose.connection.close();\r\n    done();\r\n});\r\n\r\n  describe('## ClientCurriculum APIs', () => {\r\n    //tests require appointment, client, and professional, so query first\r\n\r\n    let clientCurriculum = {};\r\n    describe('# GET /api/appointment', () => {\r\n      it('should get an appointment to create a client curriculum', (done) => {\r\n        request(app)\r\n        .get('/api/appointments')\r\n        .expect(httpStatus.OK)\r\n        .then((res) => {\r\n          expect(res.body).to.be.an('array');        \r\n          let appt = res.body[0];\r\n          clientCurriculum = {\r\n            appointment: appt._id,\r\n            client: appt.client._id,\r\n          };\r\n          done();          \r\n        })\r\n        .catch(done);\r\n      });\r\n    });\r\n  \r\n    describe('# GET /api/curriculums', () => {\r\n      it('should get a curriculum to create a client curriculum', (done) => {\r\n        request(app)\r\n        .get('/api/curriculums')\r\n        .expect(httpStatus.OK)\r\n        .then((res) => {\r\n          expect(res.body).to.be.an('array');        \r\n          let curriculum = res.body[0];\r\n          clientCurriculum.curriculum = curriculum._id;\r\n          clientCurriculum.completed = false;\r\n          done();          \r\n        })\r\n        .catch(done);\r\n      });\r\n    });\r\n\r\n    describe('# POST /api/clientcurriculums', () => {\r\n      it('should create a new clientCurriculum', (done) => {\r\n        console.log(clientCurriculum)\r\n        request(app)\r\n          .post('/api/clientcurriculums')\r\n          .send(clientCurriculum)\r\n          .expect(httpStatus.OK)\r\n          .then((res) => {\r\n            expect(res.body.completed).to.equal(clientCurriculum.completed);\r\n            clientCurriculum = res.body;\r\n            done();\r\n          })\r\n          .catch(done);\r\n      });\r\n    });\r\n\r\n    describe('# GET /api/clientcurriculums', () => {\r\n        it('should retrieve the clientCurriculum', (done) => {\r\n          request(app)\r\n            .get('/api/clientcurriculums/' + clientCurriculum._id)\r\n            .expect(httpStatus.OK)\r\n            .then((res) => {\r\n              expect(res.body.completed).to.equal(clientCurriculum.completed);\r\n              done();\r\n            })\r\n            .catch(done);\r\n        });\r\n        it('should return not found', (done) => {\r\n            request(app)\r\n              .get('/api/clientcurriculums/56c787ccc67fc16ccc1a5e92')\r\n              .expect(httpStatus.NOT_FOUND)\r\n              .then((res) => {\r\n                expect(res.body.message).to.equal('Not Found');\r\n                done();\r\n              })\r\n              .catch(done);\r\n        });\r\n    });\r\n  \r\n\r\n    describe('# PUT /api/clientcurriculums/:userId', () => {\r\n        it('should update user details', (done) => {\r\n          clientCurriculum.completed = true;\r\n          request(app)\r\n            .put(`/api/clientcurriculums/${clientCurriculum._id}`)\r\n            .send(clientCurriculum)\r\n            .expect(httpStatus.OK)\r\n            .then((res) => {\r\n              expect(res.body.completed).to.equal(true);\r\n              done();\r\n            })\r\n            .catch(done);\r\n        });\r\n      });\r\n\r\n      describe('# Get /api/clientcurriculums/', () => {\r\n        it('should search clientcurriculums and return array', (done) => {\r\n          request(app)\r\n            .get(`/api/clientcurriculums?completed=${clientCurriculum.completed}`)\r\n            .expect(httpStatus.OK)\r\n            .then((res) => {\r\n                expect(res.body).to.be.an('array');\r\n                done();\r\n            })\r\n            .catch(done);\r\n        });\r\n      });\r\n\r\n      describe('# DELETE /api/clientcurriculums', () => {\r\n        it('should delete the clientCurriculum', (done) => {\r\n          request(app)\r\n            .delete(`/api/clientcurriculums/${clientCurriculum._id}`)\r\n            .expect(httpStatus.OK)\r\n            .then((res) => {\r\n              expect(res.body.completed).to.equal(clientCurriculum.completed);\r\n              done();\r\n            })\r\n            .catch(done);\r\n        });\r\n      });\r\n  \r\n});"]}