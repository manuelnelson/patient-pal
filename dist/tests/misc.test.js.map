{"version":3,"sources":["../../src/server/tests/misc.test.js"],"names":["config","includeStack","describe","it","done","get","expect","OK","then","res","text","to","equal","catch","NOT_FOUND","body","message","INTERNAL_SERVER_ERROR","post","send","mobileNumber","BAD_REQUEST"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,eAAKA,MAAL,CAAYC,YAAZ,GAA2B,IAA3B;;AAEAC,SAAS,SAAT,EAAoB,YAAM;AACtBA,aAAS,yBAAT,EAAoC,YAAM;AACtCC,WAAG,kBAAH,EAAuB,UAACC,IAAD,EAAU;AAC7B,gEACCC,GADD,CACK,mBADL,EAECC,MAFD,CAEQ,qBAAWC,EAFnB,EAGCC,IAHD,CAGM,UAACC,GAAD,EAAS;AACX,kCAAOA,IAAIC,IAAX,EAAiBC,EAAjB,CAAoBC,KAApB,CAA0B,IAA1B;AACAR;AACH,aAND,EAOCS,KAPD,CAOOT,IAPP;AAQH,SATD;AAUH,KAXD;;AAaAF,aAAS,gBAAT,EAA2B,YAAM;AAC7BC,WAAG,0BAAH,EAA+B,UAACC,IAAD,EAAU;AACrC,gEACCC,GADD,CACK,UADL,EAECC,MAFD,CAEQ,qBAAWQ,SAFnB,EAGCN,IAHD,CAGM,UAACC,GAAD,EAAS;AACX,kCAAOA,IAAIM,IAAJ,CAASC,OAAhB,EAAyBL,EAAzB,CAA4BC,KAA5B,CAAkC,WAAlC;AACAR;AACH,aAND,EAOCS,KAPD,CAOOT,IAPP;AAQH,SATD;AAUH,KAXD;;AAaAF,aAAS,kBAAT,EAA6B,YAAM;AAC/BC,WAAG,4DAAH,EAAiE,UAACC,IAAD,EAAU;AACvE,gEACCC,GADD,CACK,0BADL,EAECC,MAFD,CAEQ,qBAAWW,qBAFnB,EAGCT,IAHD,CAGM,UAACC,GAAD,EAAS;AACX,kCAAOA,IAAIM,IAAJ,CAASC,OAAhB,EAAyBL,EAAzB,CAA4BC,KAA5B,CAAkC,uBAAlC;AACAR;AACH,aAND,EAOCS,KAPD,CAOOT,IAPP;AAQH,SATD;;AAWAD,WAAG,+DAAH,EAAoE,UAACC,IAAD,EAAU;AAC1E,gEACCc,IADD,CACM,YADN,EAECC,IAFD,CAEM;AACFC,8BAAc;AADZ,aAFN,EAKCd,MALD,CAKQ,qBAAWe,WALnB,EAMCb,IAND,CAMM,UAACC,GAAD,EAAS;AACX,kCAAOA,IAAIM,IAAJ,CAASC,OAAhB,EAAyBL,EAAzB,CAA4BC,KAA5B,CAAkC,wBAAlC;AACAR;AACH,aATD,EAUCS,KAVD,CAUOT,IAVP;AAWH,SAZD;AAaH,KAzBD;AA0BH,CArDD","file":"misc.test.js","sourcesContent":["import request from 'supertest-as-promised';\r\nimport httpStatus from 'http-status';\r\nimport chai, { expect } from 'chai';\r\nimport app from '../index';\r\n\r\nchai.config.includeStack = true;\r\n\r\ndescribe('## Misc', () => {\r\n    describe('# GET /api/health-check', () => {\r\n        it('should return OK', (done) => {\r\n            request(app)\r\n            .get('/api/health-check')\r\n            .expect(httpStatus.OK)\r\n            .then((res) => {\r\n                expect(res.text).to.equal('OK');\r\n                done();\r\n            })\r\n            .catch(done);\r\n        });\r\n    });\r\n\r\n    describe('# GET /api/404', () => {\r\n        it('should return 404 status', (done) => {\r\n            request(app)\r\n            .get('/api/404')\r\n            .expect(httpStatus.NOT_FOUND)\r\n            .then((res) => {\r\n                expect(res.body.message).to.equal('Not Found');\r\n                done();\r\n            })\r\n            .catch(done);\r\n        });\r\n    });\r\n\r\n    describe('# Error Handling', () => {\r\n        it('should handle mongoose CastError - Cast to ObjectId failed', (done) => {\r\n            request(app)\r\n            .get('/api/users/56z787zzz67fc')\r\n            .expect(httpStatus.INTERNAL_SERVER_ERROR)\r\n            .then((res) => {\r\n                expect(res.body.message).to.equal('Internal Server Error');\r\n                done();\r\n            })\r\n            .catch(done);\r\n        });\r\n\r\n        it('should handle express validation error - username is required', (done) => {\r\n            request(app)\r\n            .post('/api/users')\r\n            .send({\r\n                mobileNumber: '1234567890'\r\n            })\r\n            .expect(httpStatus.BAD_REQUEST)\r\n            .then((res) => {\r\n                expect(res.body.message).to.equal('\"username\" is required');\r\n                done();\r\n            })\r\n            .catch(done);\r\n        });\r\n    });\r\n});\r\n"]}