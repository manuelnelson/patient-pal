{"version":3,"sources":["../../src/server/api/curriculum-routes.js"],"names":["router","Router","route","get","verifyToken","req","res","next","list","then","json","curriculums","post","createCurriculum","create","curriculum","put","update","delete","remove","search","param","load"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA,IAAMA,SAAS,kBAAQC,MAAR,EAAf,C,CAAiC;;AAEjCD,OAAOE,KAAP,CAAa,GAAb;AACE;AADF,CAEGC,GAFH,CAEO,sBAASC,WAFhB,EAE6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,4BAAeC,IAAf,CAAoBH,GAApB,EAAwBC,GAAxB,EAA4BC,IAA5B,EAAkCE,IAAlC,CAAuC;AAAA,WAAeH,IAAII,IAAJ,CAASC,WAAT,CAAf;AAAA,GAAvC,CAAlB;AAAA,CAF7B;;AAIE;AAJF,CAKGC,IALH,CAKQ,sBAASR,WALjB,EAK8B,iCAAS,+BAAgBS,gBAAzB,CAL9B,EAK0E,UAACR,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,4BAAeO,MAAf,CAAsBT,GAAtB,EAA0BC,GAA1B,EAA8BC,IAA9B,EAAoCE,IAApC,CAAyC;AAAA,WAAcH,IAAII,IAAJ,CAASK,UAAT,CAAd;AAAA,GAAzC,CAAlB;AAAA,CAL1E;AAME;AACA;;AAEFf,OAAOE,KAAP,CAAa,MAAb;AACE;AADF,CAEGC,GAFH,CAEO,sBAASC,WAFhB,EAE6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkBD,IAAII,IAAJ,CAAS,4BAAeP,GAAf,CAAmBE,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,CAAT,CAAlB;AAAA,CAF7B;;AAIE;AAJF,CAKGS,GALH,CAKO,sBAASZ,WALhB,EAK6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,4BAAeU,MAAf,CAAsBZ,GAAtB,EAA0BC,GAA1B,EAA8BC,IAA9B,EAAoCE,IAApC,CAAyC;AAAA,WAAcH,IAAII,IAAJ,CAASK,UAAT,CAAd;AAAA,GAAzC,CAAlB;AAAA,CAL7B;;AAOE;AAPF,CAQGG,MARH,CAQU,sBAASd,WARnB,EAQgC,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,4BAAeY,MAAf,CAAsBd,GAAtB,EAA0BC,GAA1B,EAA8BC,IAA9B,EAAoCE,IAApC,CAAyC;AAAA,WAAcH,IAAII,IAAJ,CAASK,UAAT,CAAd;AAAA,GAAzC,CAAlB;AAAA,CARhC;;AAUAf,OAAOE,KAAP,CAAa,kBAAb;AACE;AADF,CAEGC,GAFH,CAEO,4BAAeiB,MAFtB;AAGE;AACFpB,OAAOqB,KAAP,CAAa,IAAb,EAAmB,4BAAeC,IAAlC;;kBAEetB,M","file":"curriculum-routes.js","sourcesContent":["import express from 'express';\r\nimport validate from 'express-validation';\r\nimport paramValidation from '../config/curriculum-validation';\r\nimport { CurriculumCtrl, AuthCtrl} from '../controllers';\r\nconst router = express.Router(); // eslint-disable-line new-cap\r\n\r\nrouter.route('/')\r\n  /** GET /api/curriculums - Get list of curriculums */\r\n  .get(AuthCtrl.verifyToken, (req,res,next) => CurriculumCtrl.list(req,res,next).then(curriculums => res.json(curriculums))) \r\n\r\n  /** POST /api/curriculums - Create new curriculum */\r\n  .post(AuthCtrl.verifyToken, validate(paramValidation.createCurriculum), (req,res,next) => CurriculumCtrl.create(req,res,next).then(curriculum => res.json(curriculum)))\r\n  //.post(AuthCtrl.verifyToken,CurriculumCtrl.create);\r\n  // .post(validate(paramValidation.createUser), CurriculumCtrl.create);\r\n\r\nrouter.route('/:id')\r\n  /** GET /api/curriculums/:id - Get curriculum */\r\n  .get(AuthCtrl.verifyToken, (req,res,next) => res.json(CurriculumCtrl.get(req,res,next)))\r\n\r\n  /** PUT /api/curriculums/:id - Update curriculum */\r\n  .put(AuthCtrl.verifyToken, (req,res,next) => CurriculumCtrl.update(req,res,next).then(curriculum => res.json(curriculum)))\r\n\r\n  /** DELETE /api/curriculums/:id - Delete curriculum */\r\n  .delete(AuthCtrl.verifyToken, (req,res,next) => CurriculumCtrl.remove(req,res,next).then(curriculum => res.json(curriculum)));\r\n\r\nrouter.route('/search/:keyword')\r\n  /** GET /api/skills/search/:keyword - search skills */\r\n  .get(CurriculumCtrl.search);\r\n  /** Load user when API with userId route parameter is hit */\r\nrouter.param('id', CurriculumCtrl.load);\r\n\r\nexport default router;\r\n"]}