{"version":3,"sources":["../../src/server/api/skill-data-routes.js"],"names":["router","Router","route","get","req","res","next","list","then","json","skillDatas","post","verifyToken","createSkillData","create","skillData","put","update","delete","remove","param","load"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA,IAAMA,SAAS,kBAAQC,MAAR,EAAf,C,CAAiC;;AAEjCD,OAAOE,KAAP,CAAa,GAAb;AACE;AADF,CAEGC,GAFH,CAEO,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,2BAAcC,IAAd,CAAmBH,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,EAAiCE,IAAjC,CAAsC;AAAA,WAAcH,IAAII,IAAJ,CAASC,UAAT,CAAd;AAAA,GAAtC,CAAlB;AAAA,CAFP;;AAIE;AAJF,CAKGC,IALH,CAKQ,sBAASC,WALjB,EAK8B,iCAAS,8BAAgBC,eAAzB,CAL9B,EAKyE,UAACT,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,2BAAcQ,MAAd,CAAqBV,GAArB,EAAyBC,GAAzB,EAA6BC,IAA7B,EAAmCE,IAAnC,CAAwC;AAAA,WAAaH,IAAII,IAAJ,CAASM,SAAT,CAAb;AAAA,GAAxC,CAAlB;AAAA,CALzE;AAME;AACA;;AAEFf,OAAOE,KAAP,CAAa,MAAb;AACE;AADF,CAEGC,GAFH,CAEO,sBAASS,WAFhB,EAE6B,UAACR,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkBD,IAAII,IAAJ,CAAS,2BAAcN,GAAd,CAAkBC,GAAlB,EAAsBC,GAAtB,EAA0BC,IAA1B,CAAT,CAAlB;AAAA,CAF7B;;AAIE;AAJF,CAKGU,GALH,CAKO,sBAASJ,WALhB,EAK6B,UAACR,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,2BAAcW,MAAd,CAAqBb,GAArB,EAAyBC,GAAzB,EAA6BC,IAA7B,EAAmCE,IAAnC,CAAwC;AAAA,WAAaH,IAAII,IAAJ,CAASM,SAAT,CAAb;AAAA,GAAxC,CAAlB;AAAA,CAL7B;;AAOE;AAPF,CAQGG,MARH,CAQU,sBAASN,WARnB,EAQgC,UAACR,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,2BAAca,MAAd,CAAqBf,GAArB,EAAyBC,GAAzB,EAA6BC,IAA7B,EAAmCE,IAAnC,CAAwC;AAAA,WAAaH,IAAII,IAAJ,CAASM,SAAT,CAAb;AAAA,GAAxC,CAAlB;AAAA,CARhC;;AAUA;AACAf,OAAOoB,KAAP,CAAa,IAAb,EAAmB,2BAAcC,IAAjC;;kBAEerB,M","file":"skill-data-routes.js","sourcesContent":["import express from 'express';\r\nimport validate from 'express-validation';\r\nimport paramValidation from '../config/skill-data-validation';\r\nimport { SkillDataCtrl, AuthCtrl} from '../controllers';\r\nconst router = express.Router(); // eslint-disable-line new-cap\r\n\r\nrouter.route('/')\r\n  /** GET /api/skillDatas - Get list of skillDatas */\r\n  .get((req,res,next) => SkillDataCtrl.list(req,res,next).then(skillDatas => res.json(skillDatas)))\r\n\r\n  /** POST /api/skillDatas - Create new skillData */\r\n  .post(AuthCtrl.verifyToken, validate(paramValidation.createSkillData), (req,res,next) => SkillDataCtrl.create(req,res,next).then(skillData => res.json(skillData)))\r\n  //.post(AuthCtrl.verifyToken,SkillDataCtrl.create);\r\n  // .post(validate(paramValidation.createUser), SkillDataCtrl.create);\r\n\r\nrouter.route('/:id')\r\n  /** GET /api/skillDatas/:id - Get skillData */\r\n  .get(AuthCtrl.verifyToken, (req,res,next) => res.json(SkillDataCtrl.get(req,res,next)))\r\n\r\n  /** PUT /api/skillDatas/:id - Update skillData */\r\n  .put(AuthCtrl.verifyToken, (req,res,next) => SkillDataCtrl.update(req,res,next).then(skillData => res.json(skillData)))\r\n\r\n  /** DELETE /api/skillDatas/:id - Delete skillData */\r\n  .delete(AuthCtrl.verifyToken, (req,res,next) => SkillDataCtrl.remove(req,res,next).then(skillData => res.json(skillData)));\r\n\r\n/** Load user when API with userId route parameter is hit */\r\nrouter.param('id', SkillDataCtrl.load);\r\n\r\nexport default router;\r\n"]}