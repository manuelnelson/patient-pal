{"version":3,"sources":["../../src/server/api/client-routes.js"],"names":["router","Router","route","get","verifyToken","req","res","next","list","then","json","clients","post","createClient","create","client","put","update","delete","remove","getAppointments","appointments","param","load"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA,IAAMA,SAAS,kBAAQC,MAAR,EAAf,C,CAAiC;;AAEjCD,OAAOE,KAAP,CAAa,GAAb;AACE;AADF,CAEGC,GAFH,CAEO,sBAASC,WAFhB,EAE6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,wBAAWC,IAAX,CAAgBH,GAAhB,EAAoBC,GAApB,EAAwBC,IAAxB,EAA8BE,IAA9B,CAAmC;AAAA,WAAWH,IAAII,IAAJ,CAASC,OAAT,CAAX;AAAA,GAAnC,CAAlB;AAAA,CAF7B;;AAIE;AAJF,CAKGC,IALH,CAKQ,sBAASR,WALjB,EAK8B,iCAAS,2BAAgBS,YAAzB,CAL9B,EAKsE,UAACR,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,wBAAWO,MAAX,CAAkBT,GAAlB,EAAsBC,GAAtB,EAA0BC,IAA1B,EAAgCE,IAAhC,CAAqC;AAAA,WAAUH,IAAII,IAAJ,CAASK,MAAT,CAAV;AAAA,GAArC,CAAlB;AAAA,CALtE;AAME;AACA;;AAEFf,OAAOE,KAAP,CAAa,UAAb;AACE;AADF,CAEGC,GAFH,CAEO,sBAASC,WAFhB,EAE6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkBD,IAAII,IAAJ,CAAS,wBAAWP,GAAX,CAAeE,GAAf,EAAmBC,GAAnB,EAAuBC,IAAvB,CAAT,CAAlB;AAAA,CAF7B;;AAIE;AAJF,CAKGS,GALH,CAKO,sBAASZ,WALhB,EAK6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,wBAAWU,MAAX,CAAkBZ,GAAlB,EAAsBC,GAAtB,EAA0BC,IAA1B,EAAgCE,IAAhC,CAAqC;AAAA,WAAUH,IAAII,IAAJ,CAASK,MAAT,CAAV;AAAA,GAArC,CAAlB;AAAA,CAL7B;;AAOE;AAPF,CAQGG,MARH,CAQU,sBAASd,WARnB,EAQgC,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,wBAAWY,MAAX,CAAkBd,GAAlB,EAAsBC,GAAtB,EAA0BC,IAA1B,EAAgCE,IAAhC,CAAqC;AAAA,WAAUH,IAAII,IAAJ,CAASK,MAAT,CAAV;AAAA,GAArC,CAAlB;AAAA,CARhC;;AAUAf,OAAOE,KAAP,CAAa,uBAAb,EACGC,GADH,CACO,sBAASC,WADhB,EAC6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,wBAAWa,eAAX,CAA2Bf,GAA3B,EAA+BC,GAA/B,EAAmCC,IAAnC,EAAyCE,IAAzC,CAA8C;AAAA,WAAgBH,IAAII,IAAJ,CAASW,YAAT,CAAhB;AAAA,GAA9C,CAAlB;AAAA,CAD7B;;AAGA;AACArB,OAAOsB,KAAP,CAAa,QAAb,EAAuB,wBAAWC,IAAlC;;kBAGevB,M","file":"client-routes.js","sourcesContent":["import express from 'express';\r\nimport validate from 'express-validation';\r\nimport paramValidation from '../config/client-validation';\r\nimport { ClientCtrl, AuthCtrl} from '../controllers';\r\nconst router = express.Router(); // eslint-disable-line new-cap\r\n\r\nrouter.route('/')\r\n  /** GET /api/clients - Get list of clients */\r\n  .get(AuthCtrl.verifyToken, (req,res,next) => ClientCtrl.list(req,res,next).then(clients => res.json(clients)))\r\n\r\n  /** POST /api/clients - Create new client */\r\n  .post(AuthCtrl.verifyToken, validate(paramValidation.createClient), (req,res,next) => ClientCtrl.create(req,res,next).then(client => res.json(client)))\r\n  //.post(AuthCtrl.verifyToken,ClientCtrl.create);\r\n  // .post(validate(paramValidation.createUser), ClientCtrl.create);\r\n\r\nrouter.route('/:userId')\r\n  /** GET /api/clients/:id - Get client */\r\n  .get(AuthCtrl.verifyToken, (req,res,next) => res.json(ClientCtrl.get(req,res,next)))\r\n\r\n  /** PUT /api/clients/:id - Update client */\r\n  .put(AuthCtrl.verifyToken, (req,res,next) => ClientCtrl.update(req,res,next).then(client => res.json(client)))\r\n\r\n  /** DELETE /api/clients/:id - Delete client */\r\n  .delete(AuthCtrl.verifyToken, (req,res,next) => ClientCtrl.remove(req,res,next).then(client => res.json(client)));\r\n\r\nrouter.route('/:userId/appointments')\r\n  .get(AuthCtrl.verifyToken, (req,res,next) => ClientCtrl.getAppointments(req,res,next).then(appointments => res.json(appointments)))\r\n\r\n/** Load user when API with userId route parameter is hit */\r\nrouter.param('userId', ClientCtrl.load); \r\n\r\n\r\nexport default router;\r\n"]}