{"version":3,"sources":["../../src/server/api/index.js"],"names":["config","db","api","use"],"mappings":";;;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe,gBAAoB;AAAA,KAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,KAATC,EAAS,QAATA,EAAS;;AAClC,KAAIC,MAAM,sBAAV;;AAEA;AACAA,KAAIC,GAAJ,CAAQ,QAAR;AACAD,KAAIC,GAAJ,CAAQ,OAAR;AACAD,KAAIC,GAAJ,CAAQ,UAAR;AACAD,KAAIC,GAAJ,CAAQ,gBAAR;AACAD,KAAIC,GAAJ,CAAQ,eAAR;AACAD,KAAIC,GAAJ,CAAQ,cAAR;AACAD,KAAIC,GAAJ,CAAQ,WAAR;AACAD,KAAIC,GAAJ,CAAQ,SAAR;AACAD,KAAIC,GAAJ,CAAQ,cAAR;AACAD,KAAIC,GAAJ,CAAQ,oBAAR;AACAD,KAAIC,GAAJ,CAAQ,aAAR;AACAD,KAAIC,GAAJ,CAAQ,gBAAR;;AAEA;AACA;AACA;AACA;;AAEA,QAAOD,GAAP;AACA,C,EAtCD","file":"index.js","sourcesContent":["//import { version } from '../../../package.json';\r\nimport { Router } from 'express';\r\nimport userRoutes from './user-routes';\r\nimport authRoutes from './auth-routes';\r\nimport clientRoutes from './client-routes';\r\nimport professionalRoutes from './professional-routes';\r\nimport appointmentRoutes from './appointment-routes';\r\nimport targetTypeRoutes from './target-type-routes';\r\nimport dttTypeRoutes from './dtt-type-routes';\r\nimport skillRoutes from './skill-routes';\r\nimport curriculumRoutes from './curriculum-routes';\r\nimport clientCurriculumRoutes from './client-curriculum-routes';\r\nimport skillDataRoutes from './skill-data-routes';\r\nimport organizationRoutes from './organization-routes';\r\n\r\nexport default ({ config, db }) => {\r\n\tlet api = Router();\r\n\r\n\t// mount user routes at /users\r\n\tapi.use('/users', userRoutes);\r\n\tapi.use('/auth', authRoutes);\r\n\tapi.use('/clients', clientRoutes);\r\n\tapi.use('/professionals', professionalRoutes);\r\n\tapi.use('/appointments', appointmentRoutes);\r\n\tapi.use('/targettypes', targetTypeRoutes);\r\n\tapi.use('/dtttypes', dttTypeRoutes);\r\n\tapi.use('/skills', skillRoutes);\r\n\tapi.use('/curriculums', curriculumRoutes);\r\n\tapi.use('/clientcurriculums', clientCurriculumRoutes);\r\n\tapi.use('/skilldatas', skillDataRoutes);\r\n\tapi.use('/organizations', organizationRoutes);\r\n\t\r\n\t// perhaps expose some API metadata at the root\r\n\t// api.get('/', (req, res) => {\r\n\t// \tres.json({ version });\r\n\t// });\r\n\r\n\treturn api;\r\n}\r\n"]}