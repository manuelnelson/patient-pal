{"version":3,"sources":["../../src/server/api/target-type-routes.js"],"names":["router","Router","route","get","verifyToken","req","res","next","list","then","json","targetTypes","post","create","targetType","put","update","delete","remove","param","load"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA,IAAMA,SAAS,kBAAQC,MAAR,EAAf,C,CAAiC;;AAEjCD,OAAOE,KAAP,CAAa,GAAb;AACE;AADF,CAEGC,GAFH,CAEO,sBAASC,WAFhB,EAE6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,4BAAeC,IAAf,CAAoBH,GAApB,EAAwBC,GAAxB,EAA4BC,IAA5B,EAAkCE,IAAlC,CAAuC;AAAA,WAAeH,IAAII,IAAJ,CAASC,WAAT,CAAf;AAAA,GAAvC,CAAlB;AAAA,CAF7B;;AAIE;AAJF,CAKGC,IALH,CAKQ,sBAASR,WALjB,EAK8B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,4BAAeM,MAAf,CAAsBR,GAAtB,EAA0BC,GAA1B,EAA8BC,IAA9B,EAAoCE,IAApC,CAAyC;AAAA,WAAcH,IAAII,IAAJ,CAASI,UAAT,CAAd;AAAA,GAAzC,CAAlB;AAAA,CAL9B;AAME;AACA;;AAEFd,OAAOE,KAAP,CAAa,MAAb;AACE;AADF,CAEGC,GAFH,CAEO,sBAASC,WAFhB,EAE6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkBD,IAAII,IAAJ,CAAS,4BAAeP,GAAf,CAAmBE,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,CAAT,CAAlB;AAAA,CAF7B;;AAIE;AAJF,CAKGQ,GALH,CAKO,sBAASX,WALhB,EAK6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,4BAAeS,MAAf,CAAsBX,GAAtB,EAA0BC,GAA1B,EAA8BC,IAA9B,EAAoCE,IAApC,CAAyC;AAAA,WAAcH,IAAII,IAAJ,CAASI,UAAT,CAAd;AAAA,GAAzC,CAAlB;AAAA,CAL7B;;AAOE;AAPF,CAQGG,MARH,CAQU,sBAASb,WARnB,EAQgC,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,4BAAeW,MAAf,CAAsBb,GAAtB,EAA0BC,GAA1B,EAA8BC,IAA9B,EAAoCE,IAApC,CAAyC;AAAA,WAAcH,IAAII,IAAJ,CAASI,UAAT,CAAd;AAAA,GAAzC,CAAlB;AAAA,CARhC;;AAUA;AACAd,OAAOmB,KAAP,CAAa,IAAb,EAAmB,4BAAeC,IAAlC;;kBAEepB,M","file":"target-type-routes.js","sourcesContent":["import express from 'express';\r\nimport validate from 'express-validation';\r\nimport paramValidation from '../config/user-validation';\r\nimport { TargetTypeCtrl, AuthCtrl} from '../controllers';\r\nconst router = express.Router(); // eslint-disable-line new-cap\r\n\r\nrouter.route('/')\r\n  /** GET /api/targetTypes - Get list of targetTypes */\r\n  .get(AuthCtrl.verifyToken, (req,res,next) => TargetTypeCtrl.list(req,res,next).then(targetTypes => res.json(targetTypes)))\r\n\r\n  /** POST /api/targetTypes - Create new targetType */\r\n  .post(AuthCtrl.verifyToken, (req,res,next) => TargetTypeCtrl.create(req,res,next).then(targetType => res.json(targetType)))\r\n  //.post(AuthCtrl.verifyToken,TargetTypeCtrl.create);\r\n  // .post(validate(paramValidation.createUser), TargetTypeCtrl.create);\r\n\r\nrouter.route('/:id')\r\n  /** GET /api/targetTypes/:id - Get targetType */\r\n  .get(AuthCtrl.verifyToken, (req,res,next) => res.json(TargetTypeCtrl.get(req,res,next)))\r\n\r\n  /** PUT /api/targetTypes/:id - Update targetType */\r\n  .put(AuthCtrl.verifyToken, (req,res,next) => TargetTypeCtrl.update(req,res,next).then(targetType => res.json(targetType)))\r\n\r\n  /** DELETE /api/targetTypes/:id - Delete targetType */\r\n  .delete(AuthCtrl.verifyToken, (req,res,next) => TargetTypeCtrl.remove(req,res,next).then(targetType => res.json(targetType)));\r\n\r\n/** Load user when API with userId route parameter is hit */\r\nrouter.param('id', TargetTypeCtrl.load);\r\n\r\nexport default router;\r\n"]}