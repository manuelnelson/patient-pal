{"version":3,"sources":["../../src/server/api/organization-routes.js"],"names":["router","Router","route","get","req","res","next","list","then","json","data","organizations","post","create","organization","put","update","delete","remove","param","load"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA,IAAMA,SAAS,kBAAQC,MAAR,EAAf,C,CAAiC;;AAEjCD,OAAOE,KAAP,CAAa,GAAb;AACE;AADF,CAEGC,GAFH,CAEO,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,8BAAiBC,IAAjB,CAAsBH,GAAtB,EAA0BC,GAA1B,EAA8BC,IAA9B,EAAoCE,IAApC,CAAyC;AAAA,WAAiBH,IAAII,IAAJ,CAAS,EAACC,MAAMC,aAAP,EAAT,CAAjB;AAAA,GAAzC,CAAlB;AAAA,CAFP;;AAIE;AAJF,CAKGC,IALH,CAKQ,UAACR,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,8BAAiBO,MAAjB,CAAwBT,GAAxB,EAA4BC,GAA5B,EAAgCC,IAAhC,EAAsCE,IAAtC,CAA2C;AAAA,WAAgBH,IAAII,IAAJ,CAAS,EAACC,MAAMI,YAAP,EAAT,CAAhB;AAAA,GAA3C,CAAlB;AAAA,CALR;AAME;AACA;;AAEFd,OAAOE,KAAP,CAAa,MAAb;AACE;AADF,CAEGC,GAFH,CAEO,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,8BAAiBH,GAAjB,CAAqBC,GAArB,EAAyBC,GAAzB,EAA6BC,IAA7B,EAAmCE,IAAnC,CAAwC;AAAA,WAAgBH,IAAII,IAAJ,CAAS,EAACC,MAAMI,YAAP,EAAT,CAAhB;AAAA,GAAxC,CAAlB;AAAA,CAFP;;AAIE;AAJF,CAKGC,GALH,CAKO,UAACX,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,8BAAiBU,MAAjB,CAAwBZ,GAAxB,EAA4BC,GAA5B,EAAgCC,IAAhC,EAAsCE,IAAtC,CAA2C;AAAA,WAAgBH,IAAII,IAAJ,CAAS,EAACC,MAAMI,YAAP,EAAT,CAAhB;AAAA,GAA3C,CAAlB;AAAA,CALP;;AAOE;AAPF,CAQGG,MARH,CAQU,UAACb,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,8BAAiBY,MAAjB,CAAwBd,GAAxB,EAA4BC,GAA5B,EAAgCC,IAAhC,EAAsCE,IAAtC,CAA2C;AAAA,WAAgBH,IAAII,IAAJ,CAAS,EAACC,MAAMI,YAAP,EAAT,CAAhB;AAAA,GAA3C,CAAlB;AAAA,CARV;;AAUA;AACAd,OAAOmB,KAAP,CAAa,IAAb,EAAmB,8BAAiBC,IAApC;;kBAEepB,M","file":"organization-routes.js","sourcesContent":["import express from 'express';\r\nimport validate from 'express-validation';\r\nimport paramValidation from '../config/user-validation';\r\nimport { OrganizationCtrl, AuthCtrl} from '../controllers';\r\nconst router = express.Router(); // eslint-disable-line new-cap\r\n\r\nrouter.route('/')\r\n  /** GET /api/organizations - Get list of organizations */\r\n  .get((req,res,next) => OrganizationCtrl.list(req,res,next).then(organizations => res.json({data: organizations})))\r\n\r\n  /** POST /api/organizations - Create new organization */\r\n  .post((req,res,next) => OrganizationCtrl.create(req,res,next).then(organization => res.json({data: organization})))\r\n  //.post(AuthCtrl.verifyToken,OrganizationCtrl.create);\r\n  // .post(validate(paramValidation.createUser), OrganizationCtrl.create);\r\n\r\nrouter.route('/:id')\r\n  /** GET /api/organizations/:id - Get organization */\r\n  .get((req,res,next) => OrganizationCtrl.get(req,res,next).then(organization => res.json({data: organization})))\r\n\r\n  /** PUT /api/organizations/:id - Update organization */\r\n  .put((req,res,next) => OrganizationCtrl.update(req,res,next).then(organization => res.json({data: organization})))\r\n\r\n  /** DELETE /api/organizations/:id - Delete organization */\r\n  .delete((req,res,next) => OrganizationCtrl.remove(req,res,next).then(organization => res.json({data: organization})));\r\n\r\n/** Load user when API with userId route parameter is hit */\r\nrouter.param('id', OrganizationCtrl.load);\r\n\r\nexport default router;\r\n"]}