{"version":3,"sources":["../../src/server/api/appointment-routes.js"],"names":["router","Router","route","get","verifyToken","req","res","next","list","then","json","appointments","post","create","appointment","put","update","delete","remove","param","load"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA,IAAMA,SAAS,kBAAQC,MAAR,EAAf,C,CAAiC;;AAEjCD,OAAOE,KAAP,CAAa,GAAb;AACE;AADF,CAEGC,GAFH,CAEO,sBAASC,WAFhB,EAE6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,6BAAgBC,IAAhB,CAAqBH,GAArB,EAAyBC,GAAzB,EAA6BC,IAA7B,EAAmCE,IAAnC,CAAwC;AAAA,WAAgBH,IAAII,IAAJ,CAASC,YAAT,CAAhB;AAAA,GAAxC,CAAlB;AAAA,CAF7B;;AAIE;AAJF,CAKGC,IALH,CAKQ,sBAASR,WALjB,EAK8B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,6BAAgBM,MAAhB,CAAuBR,GAAvB,EAA2BC,GAA3B,EAA+BC,IAA/B,EAAqCE,IAArC,CAA0C;AAAA,WAAeH,IAAII,IAAJ,CAASI,WAAT,CAAf;AAAA,GAA1C,CAAlB;AAAA,CAL9B;AAME;AACA;;AAEFd,OAAOE,KAAP,CAAa,MAAb;AACE;AADF,CAEGC,GAFH,CAEO,sBAASC,WAFhB,EAE6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkBD,IAAII,IAAJ,CAAS,6BAAgBP,GAAhB,CAAoBE,GAApB,EAAwBC,GAAxB,EAA4BC,IAA5B,CAAT,CAAlB;AAAA,CAF7B;;AAIE;AAJF,CAKGQ,GALH,CAKO,sBAASX,WALhB,EAK6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,6BAAgBS,MAAhB,CAAuBX,GAAvB,EAA2BC,GAA3B,EAA+BC,IAA/B,EAAqCE,IAArC,CAA0C;AAAA,WAAeH,IAAII,IAAJ,CAASI,WAAT,CAAf;AAAA,GAA1C,CAAlB;AAAA,CAL7B;;AAOE;AAPF,CAQGG,MARH,CAQU,sBAASb,WARnB,EAQgC,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,6BAAgBW,MAAhB,CAAuBb,GAAvB,EAA2BC,GAA3B,EAA+BC,IAA/B,EAAqCE,IAArC,CAA0C;AAAA,WAAeH,IAAII,IAAJ,CAASI,WAAT,CAAf;AAAA,GAA1C,CAAlB;AAAA,CARhC;;AAUA;AACAd,OAAOmB,KAAP,CAAa,IAAb,EAAmB,6BAAgBC,IAAnC;;kBAEepB,M","file":"appointment-routes.js","sourcesContent":["import express from 'express';\r\nimport validate from 'express-validation';\r\nimport paramValidation from '../config/user-validation';\r\nimport { AppointmentCtrl, AuthCtrl} from '../controllers';\r\nconst router = express.Router(); // eslint-disable-line new-cap\r\n\r\nrouter.route('/')\r\n  /** GET /api/appointments - Get list of appointments */\r\n  .get(AuthCtrl.verifyToken, (req,res,next) => AppointmentCtrl.list(req,res,next).then(appointments => res.json(appointments)))\r\n\r\n  /** POST /api/appointments - Create new appointment */\r\n  .post(AuthCtrl.verifyToken, (req,res,next) => AppointmentCtrl.create(req,res,next).then(appointment => res.json(appointment)))\r\n  //.post(AuthCtrl.verifyToken,AppointmentCtrl.create);\r\n  // .post(validate(paramValidation.createUser), AppointmentCtrl.create);\r\n\r\nrouter.route('/:id')\r\n  /** GET /api/appointments/:id - Get appointment */\r\n  .get(AuthCtrl.verifyToken, (req,res,next) => res.json(AppointmentCtrl.get(req,res,next)))\r\n\r\n  /** PUT /api/appointments/:id - Update appointment */\r\n  .put(AuthCtrl.verifyToken, (req,res,next) => AppointmentCtrl.update(req,res,next).then(appointment => res.json(appointment)))\r\n\r\n  /** DELETE /api/appointments/:id - Delete appointment */\r\n  .delete(AuthCtrl.verifyToken, (req,res,next) => AppointmentCtrl.remove(req,res,next).then(appointment => res.json(appointment)));\r\n\r\n/** Load user when API with userId route parameter is hit */\r\nrouter.param('id', AppointmentCtrl.load);\r\n\r\nexport default router;\r\n"]}