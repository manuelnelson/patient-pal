{"version":3,"sources":["../../src/server/api/billing-routes.js"],"names":["router","Router","route","get","verifyToken","req","res","next","getCustomer","then","json","customer","post","createCustomer","createSource","createSubscription","subscription","getSubscription","put","updateSubscription","organization"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA,IAAMA,SAAS,kBAAQC,MAAR,EAAf,C,CAAiC;;AAEjCD,OAAOE,KAAP,CAAa,YAAb;AACE;AADF,CAEGC,GAFH,CAEO,sBAASC,WAFhB,EAE6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,yBAAYC,WAAZ,CAAwBH,GAAxB,EAA4BC,GAA5B,EAAgCC,IAAhC,EAAsCE,IAAtC,CAA2C;AAAA,WAAYH,IAAII,IAAJ,CAASC,QAAT,CAAZ;AAAA,GAA3C,CAAlB;AAAA,CAF7B;;AAIE;AAJF,CAKGC,IALH,CAKQ,sBAASR,WALjB,EAK6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,yBAAYM,cAAZ,CAA2BR,GAA3B,EAA+BC,GAA/B,EAAmCC,IAAnC,EAAyCE,IAAzC,CAA8C;AAAA,WAAYH,IAAII,IAAJ,CAASC,QAAT,CAAZ;AAAA,GAA9C,CAAlB;AAAA,CAL7B;;AAOAX,OAAOE,KAAP,CAAa,UAAb;;AAEE;AAFF,CAGGU,IAHH,CAGQ,sBAASR,WAHjB,EAG6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,yBAAYO,YAAZ,CAAyBT,GAAzB,EAA6BC,GAA7B,EAAiCC,IAAjC,EAAuCE,IAAvC,CAA4C;AAAA,WAAYH,IAAII,IAAJ,CAASC,QAAT,CAAZ;AAAA,GAA5C,CAAlB;AAAA,CAH7B;;AAKAX,OAAOE,KAAP,CAAa,gBAAb;AACI;AADJ,CAEKU,IAFL,CAEU,sBAASR,WAFnB,EAE+B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,yBAAYQ,kBAAZ,CAA+BV,GAA/B,EAAmCC,GAAnC,EAAuCC,IAAvC,EAA6CE,IAA7C,CAAkD;AAAA,WAAgBH,IAAII,IAAJ,CAASM,YAAT,CAAhB;AAAA,GAAlD,CAAlB;AAAA,CAF/B;AAGAhB,OAAOE,KAAP,CAAa,oBAAb;AACI;AADJ,CAEKC,GAFL,CAES,sBAASC,WAFlB,EAE+B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,yBAAYU,eAAZ,CAA4BZ,GAA5B,EAAgCC,GAAhC,EAAoCC,IAApC,EAA0CE,IAA1C,CAA+C;AAAA,WAAYH,IAAII,IAAJ,CAASC,QAAT,CAAZ;AAAA,GAA/C,CAAlB;AAAA,CAF/B;;AAII;AAJJ,CAKKO,GALL,CAKS,sBAASd,WALlB,EAK+B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT;AAAA,SAAkB,yBAAYY,kBAAZ,CAA+Bd,GAA/B,EAAmCC,GAAnC,EAAuCC,IAAvC,EAA6CE,IAA7C,CAAkD;AAAA,WAAgBH,IAAII,IAAJ,CAASU,YAAT,CAAhB;AAAA,GAAlD,CAAlB;AAAA,CAL/B;;AAOA;AACA;;AAEA;AACA;;kBAEepB,M","file":"billing-routes.js","sourcesContent":["import express from 'express';\r\nimport validate from 'express-validation';\r\nimport paramValidation from '../config/user-validation';\r\nimport { BillingCtrl, AuthCtrl} from '../controllers';\r\nconst router = express.Router(); // eslint-disable-line new-cap\r\n\r\nrouter.route('/customers')\r\n  // /** GET /api/billing/client - Get list of organizations */\r\n  .get(AuthCtrl.verifyToken, (req,res,next) => BillingCtrl.getCustomer(req,res,next).then(customer => res.json(customer)))\r\n\r\n  /** POST /api/billing/customers - Create new organization */\r\n  .post(AuthCtrl.verifyToken,(req,res,next) => BillingCtrl.createCustomer(req,res,next).then(customer => res.json(customer)))\r\n\r\nrouter.route('/sources')\r\n\r\n  /** POST /api/billing/customers - Create new organization */\r\n  .post(AuthCtrl.verifyToken,(req,res,next) => BillingCtrl.createSource(req,res,next).then(customer => res.json(customer)))\r\n\r\nrouter.route('/subscriptions')  \r\n    /** POST /api/billing/subscriptions - Create new subscription */\r\n    .post(AuthCtrl.verifyToken,(req,res,next) => BillingCtrl.createSubscription(req,res,next).then(subscription => res.json(subscription)))\r\nrouter.route('/subscriptions/:id')\r\n    /** GET /api/subscriptions/:id - Get subscription */\r\n    .get(AuthCtrl.verifyToken, (req,res,next) => BillingCtrl.getSubscription(req,res,next).then(customer => res.json(customer)))\r\n\r\n    /** PUT /api/subscriptions/:id - Update subscription */\r\n    .put(AuthCtrl.verifyToken, (req,res,next) => BillingCtrl.updateSubscription(req,res,next).then(organization => res.json(organization)))\r\n\r\n//   /** DELETE /api/organizations/:id - Delete organization */\r\n//   .delete(AuthCtrl.verifyToken, (req,res,next) => OrganizationCtrl.remove(req,res,next).then(organization => res.json(organization)));\r\n\r\n/** Load user when API with userId route parameter is hit */\r\n// router.param('id', OrganizationCtrl.load);\r\n\r\nexport default router;\r\n"]}